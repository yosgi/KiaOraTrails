{
  "contractName": "NFTCollateral",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "AlreadySupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidNFT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPrice",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum PoolStructs.TokenType",
          "name": "tokenType",
          "type": "uint8"
        }
      ],
      "name": "InvalidTokenType",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenNotSupported",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum PoolStructs.TokenType",
          "name": "tokenType",
          "type": "uint8"
        }
      ],
      "name": "AddSupportedToken",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BLOCKS_PER_YEAR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BPS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "hasDepositedNFT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        }
      ],
      "name": "getDepositedNFTs",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        }
      ],
      "name": "getDepositedNFTCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AlreadySupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNFT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum PoolStructs.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"name\":\"InvalidTokenType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotSupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum PoolStructs.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"name\":\"AddSupportedToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLOCKS_PER_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"name\":\"getDepositedNFTCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"name\":\"getDepositedNFTs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"hasDepositedNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"used for handling the deposit and withdrawal of NFTs as collateral.\",\"kind\":\"dev\",\"methods\":{\"getDepositedNFTCount(address,address)\":{\"details\":\"Gets the count of NFTs deposited by a user for a specific NFT contract.\",\"params\":{\"account\":\"The address of the user.\",\"nftAddress\":\"The address of the NFT contract.\"}},\"getDepositedNFTs(address,address)\":{\"details\":\"Gets the list of NFTs deposited by a user for a specific NFT contract.\",\"params\":{\"account\":\"The address of the user.\",\"nftAddress\":\"The address of the NFT contract.\"}},\"getTokenPrice(address)\":{\"details\":\"Gets the USD price of a supported token using Chainlink Oracle.\",\"params\":{\"token\":\"The address of the token.\"}},\"hasDepositedNFT(address,address,uint256)\":{\"details\":\"Checks if a specific NFT has been deposited by a user.\",\"params\":{\"account\":\"The address of the user.\",\"nftAddress\":\"The address of the NFT contract.\",\"tokenId\":\"The ID of the NFT.\"},\"returns\":{\"_0\":\"Whether the NFT has been deposited by the user.\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"ERC721 receiver callback to accept incoming NFT transfers.\"}},\"title\":\"NFT Collateral\",\"version\":1},\"userdoc\":{\"errors\":{\"TokenNotSupported()\":[{\"notice\":\"ERRORS \"}]},\"events\":{\"AddSupportedToken(address,uint8)\":{\"notice\":\"EVENTS \"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NFTCollateral.sol\":\"NFTCollateral\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"project:/contracts/NFTCollateral.sol\":{\"keccak256\":\"0x686e4ba1be0bf01d75508af93b7d17ecbc1544f455dd0ec7cface8a108fee14e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ad421238fe32461e3ae806edb629b16e2448232bc0db472d4be4dd6dfa528c1\",\"dweb:/ipfs/QmVCjFr2TymapNfLpeB54RxTLpGu7NnSwAU3dBKKLmCJL8\"]},\"project:/contracts/TokenSupport.sol\":{\"keccak256\":\"0xeb8cd1c39de0b505a700896cf6ffdcfeba831a0ced2c457f6a117388cae0cb0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2305c9ce59ddf924d8ee2653d2e8aa5798a22136a210795b2fbedad039669042\",\"dweb:/ipfs/QmYVA7LXbjJHNywUAN7H6iWGUuNgUh3QMF6nqgf5XwrgPd\"]},\"project:/contracts/interfaces/PoolStructs.sol\":{\"keccak256\":\"0x07a177c4ed55a6942fa0b23da4331cc568b6988f2df7551fabd5543cafa32e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3a79ad53c0d65207793ab43fd30d3243f7d38a56b42760550815718a617c147\",\"dweb:/ipfs/QmU9Y5C5TsB6UP1wEkTcvSnMbQB9Rr7aFrcQ61yEX27QXw\"]},\"project:/contracts/libraries/ChainlinkOracle.sol\":{\"keccak256\":\"0xfef1f73f409dd861eef23a24e28f81bcbc6edfbb47165ccdb96e0bae8750eae9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6254a016783d4a9ad4d4cc25e824be86f7f0211177e8a18d2061a657b895952e\",\"dweb:/ipfs/QmVgtK2wNf74zQnVumfmaumbexjtfqNzeZ2Rijk9PiWHyk\"]},\"project:/contracts/utils/Constants.sol\":{\"keccak256\":\"0x7982a8d175653f37e2fcb93454e966a60bdb628276eeec64524febd2464d6787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2c02ad7b3c74a4c082a4196162bec34411099df8ae6b243b7a812acf5184798\",\"dweb:/ipfs/QmbJmHtvc4DN1ZhWMz7sBker7hcSwf52o5g5B7SQe9T7XT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610735806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b4240c991161005b578063b4240c9914610111578063d02641a014610124578063d37db1d214610137578063f6aa13f21461014157600080fd5b8063150b7a021461008d578063249d39e9146100ca57806326b45de5146100e2578063aaf5eb6814610102575b600080fd5b6100ac61009b3660046103fc565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100d4620186a081565b6040519081526020016100c1565b6100f56100f0366004610497565b610164565b6040516100c191906104ca565b6100d4670de0b6b3a764000081565b6100d461011f366004610497565b61019e565b6100d461013236600461050e565b6101ce565b6100d46220148081565b61015461014f366004610529565b610228565b60405190151581526020016100c1565b6001600160a01b03808316600090815260036020908152604080832093851683529290522060609061019590610261565b90505b92915050565b6001600160a01b03808316600090815260036020908152604080832093851683529290529081206101959061026e565b6001600160a01b038116600090815260026020526040812054600160a81b900460ff166101fd57506000919050565b6001600160a01b038083166000908152600260205260409020541661022181610278565b9392505050565b6001600160a01b0380841660009081526003602090815260408083209386168352929052908120610259908361036c565b949350505050565b6060600061022183610384565b6000610198825490565b6000806000806000856001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e2919061057f565b9450945050935093506000831315806102f9575081155b8061031b57508369ffffffffffffffffffff168169ffffffffffffffffffff16105b806103305750611c2061032e83426105e5565b115b1561034d5760405162bfc92160e01b815260040160405180910390fd5b610358600a806106dc565b61036290846106e8565b9695505050505050565b60008181526001830160205260408120541515610195565b6060816000018054806020026020016040519081016040528092919081815260200182805480156103d457602002820191906000526020600020905b8154815260200190600101908083116103c0575b50505050509050919050565b80356001600160a01b03811681146103f757600080fd5b919050565b60008060008060006080868803121561041457600080fd5b61041d866103e0565b945061042b602087016103e0565b935060408601359250606086013567ffffffffffffffff8082111561044f57600080fd5b818801915088601f83011261046357600080fd5b81358181111561047257600080fd5b89602082850101111561048457600080fd5b9699959850939650602001949392505050565b600080604083850312156104aa57600080fd5b6104b3836103e0565b91506104c1602084016103e0565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610502578351835292840192918401916001016104e6565b50909695505050505050565b60006020828403121561052057600080fd5b610195826103e0565b60008060006060848603121561053e57600080fd5b610547846103e0565b9250610555602085016103e0565b9150604084013590509250925092565b805169ffffffffffffffffffff811681146103f757600080fd5b600080600080600060a0868803121561059757600080fd5b6105a086610565565b94506020860151935060408601519250606086015191506105c360808701610565565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b81810381811115610198576101986105cf565b600181815b80851115610633578160001904821115610619576106196105cf565b8085161561062657918102915b93841c93908002906105fd565b509250929050565b60008261064a57506001610198565b8161065757506000610198565b816001811461066d576002811461067757610693565b6001915050610198565b60ff841115610688576106886105cf565b50506001821b610198565b5060208310610133831016604e8410600b84101617156106b6575081810a610198565b6106c083836105f8565b80600019048211156106d4576106d46105cf565b029392505050565b6000610195838361063b565b8082028115828204841417610198576101986105cf56fea2646970667358221220789c3e5a30e5e6cc6b16fc65b945c61f6de7c54d5fa641ae8e197140dfe2864564736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063b4240c991161005b578063b4240c9914610111578063d02641a014610124578063d37db1d214610137578063f6aa13f21461014157600080fd5b8063150b7a021461008d578063249d39e9146100ca57806326b45de5146100e2578063aaf5eb6814610102575b600080fd5b6100ac61009b3660046103fc565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100d4620186a081565b6040519081526020016100c1565b6100f56100f0366004610497565b610164565b6040516100c191906104ca565b6100d4670de0b6b3a764000081565b6100d461011f366004610497565b61019e565b6100d461013236600461050e565b6101ce565b6100d46220148081565b61015461014f366004610529565b610228565b60405190151581526020016100c1565b6001600160a01b03808316600090815260036020908152604080832093851683529290522060609061019590610261565b90505b92915050565b6001600160a01b03808316600090815260036020908152604080832093851683529290529081206101959061026e565b6001600160a01b038116600090815260026020526040812054600160a81b900460ff166101fd57506000919050565b6001600160a01b038083166000908152600260205260409020541661022181610278565b9392505050565b6001600160a01b0380841660009081526003602090815260408083209386168352929052908120610259908361036c565b949350505050565b6060600061022183610384565b6000610198825490565b6000806000806000856001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e2919061057f565b9450945050935093506000831315806102f9575081155b8061031b57508369ffffffffffffffffffff168169ffffffffffffffffffff16105b806103305750611c2061032e83426105e5565b115b1561034d5760405162bfc92160e01b815260040160405180910390fd5b610358600a806106dc565b61036290846106e8565b9695505050505050565b60008181526001830160205260408120541515610195565b6060816000018054806020026020016040519081016040528092919081815260200182805480156103d457602002820191906000526020600020905b8154815260200190600101908083116103c0575b50505050509050919050565b80356001600160a01b03811681146103f757600080fd5b919050565b60008060008060006080868803121561041457600080fd5b61041d866103e0565b945061042b602087016103e0565b935060408601359250606086013567ffffffffffffffff8082111561044f57600080fd5b818801915088601f83011261046357600080fd5b81358181111561047257600080fd5b89602082850101111561048457600080fd5b9699959850939650602001949392505050565b600080604083850312156104aa57600080fd5b6104b3836103e0565b91506104c1602084016103e0565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610502578351835292840192918401916001016104e6565b50909695505050505050565b60006020828403121561052057600080fd5b610195826103e0565b60008060006060848603121561053e57600080fd5b610547846103e0565b9250610555602085016103e0565b9150604084013590509250925092565b805169ffffffffffffffffffff811681146103f757600080fd5b600080600080600060a0868803121561059757600080fd5b6105a086610565565b94506020860151935060408601519250606086015191506105c360808701610565565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b81810381811115610198576101986105cf565b600181815b80851115610633578160001904821115610619576106196105cf565b8085161561062657918102915b93841c93908002906105fd565b509250929050565b60008261064a57506001610198565b8161065757506000610198565b816001811461066d576002811461067757610693565b6001915050610198565b60ff841115610688576106886105cf565b50506001821b610198565b5060208310610133831016604e8410600b84101617156106b6575081810a610198565b6106c083836105f8565b80600019048211156106d4576106d46105cf565b029392505050565b6000610195838361063b565b8082028115828204841417610198576101986105cf56fea2646970667358221220789c3e5a30e5e6cc6b16fc65b945c61f6de7c54d5fa641ae8e197140dfe2864564736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5483:62",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:62",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:62"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:62"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:62"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:62"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:62",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:62",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:62"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:62"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:62",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:62"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:62"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:62"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:62"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:62"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:62",
                "type": ""
              }
            ],
            "src": "14:173:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "332:668:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "379:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "388:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "391:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "381:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "381:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "381:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "353:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "362:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "349:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "349:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "374:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "345:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:33:62"
                  },
                  "nodeType": "YulIf",
                  "src": "342:53:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "404:39:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "433:9:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "414:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "414:29:62"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "404:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "452:48:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "462:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "462:38:62"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "452:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "509:42:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "536:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "547:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "532:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "532:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "519:12:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:32:62"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "509:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "560:46:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "591:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "602:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "587:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "587:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "574:12:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "574:32:62"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "564:6:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "615:28:62",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "625:18:62",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "619:2:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "670:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "679:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "682:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "672:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "672:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "672:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "658:6:62"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "666:2:62"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "655:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "655:14:62"
                  },
                  "nodeType": "YulIf",
                  "src": "652:34:62"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "695:32:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "709:9:62"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "720:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "705:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "705:22:62"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "699:2:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "775:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "784:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "787:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "777:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "777:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "777:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "754:2:62"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "758:4:62",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "750:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "750:13:62"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "765:7:62"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "746:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "746:27:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "739:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "739:35:62"
                  },
                  "nodeType": "YulIf",
                  "src": "736:55:62"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "800:30:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "827:2:62"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "814:12:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "814:16:62"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "804:6:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "857:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "866:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "869:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "859:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "859:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "859:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "845:6:62"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "853:2:62"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "842:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "842:14:62"
                  },
                  "nodeType": "YulIf",
                  "src": "839:34:62"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "923:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "932:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "935:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "925:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "925:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "925:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "896:2:62"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "900:6:62"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "892:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "892:15:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "909:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "888:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "888:24:62"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "914:7:62"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "885:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "885:37:62"
                  },
                  "nodeType": "YulIf",
                  "src": "882:57:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "948:21:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "962:2:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "966:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "958:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:11:62"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "948:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "978:16:62",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "988:6:62"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "978:6:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "266:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "277:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "289:6:62",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "297:6:62",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "305:6:62",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "313:6:62",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "321:6:62",
                "type": ""
              }
            ],
            "src": "192:808:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1104:103:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1126:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1137:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1122:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1122:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1114:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1156:9:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1171:6:62"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1183:3:62",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1188:10:62",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1179:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1179:20:62"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1167:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1167:33:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1149:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1149:52:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1149:52:62"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1073:9:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1084:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1095:4:62",
                "type": ""
              }
            ],
            "src": "1005:202:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1313:76:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1323:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1335:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1346:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1331:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1331:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1323:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1365:9:62"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1376:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1358:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1358:25:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1358:25:62"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1282:9:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1293:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1304:4:62",
                "type": ""
              }
            ],
            "src": "1212:177:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1481:173:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1527:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1536:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1539:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1529:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1529:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1529:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1502:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1511:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1498:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1498:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1523:2:62",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1494:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1494:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "1491:52:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1552:39:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1581:9:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1562:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1562:29:62"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1552:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1600:48:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1633:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1644:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1629:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1629:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1610:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1610:38:62"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1600:6:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1439:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1450:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1462:6:62",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1470:6:62",
                "type": ""
              }
            ],
            "src": "1394:260:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1810:481:62",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1820:12:62",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1830:2:62",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1824:2:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1841:32:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1859:9:62"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1870:2:62"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1855:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:18:62"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "1845:6:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1889:9:62"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1900:2:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1882:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1882:21:62"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1912:17:62",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "1923:6:62"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1916:3:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1938:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1958:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1952:5:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1952:13:62"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1942:6:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "1981:6:62"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1989:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1974:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1974:22:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1974:22:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2005:25:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2016:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2027:2:62",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2012:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2012:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2005:3:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2039:29:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2057:6:62"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2065:2:62"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2053:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2053:15:62"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "2043:6:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2077:10:62",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2086:1:62",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2081:1:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2145:120:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2166:3:62"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2177:6:62"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2171:5:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2171:13:62"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2159:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2159:26:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2159:26:62"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2198:19:62",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2209:3:62"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2214:2:62"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2205:3:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2205:12:62"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2198:3:62"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2230:25:62",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2244:6:62"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2252:2:62"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2240:3:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2240:15:62"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2230:6:62"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2107:1:62"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2110:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2104:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2104:13:62"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2118:18:62",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2120:14:62",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2129:1:62"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2132:1:62",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2125:3:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2125:9:62"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2120:1:62"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2100:3:62",
                    "statements": []
                  },
                  "src": "2096:169:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2274:11:62",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "2282:3:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2274:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1779:9:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1790:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1801:4:62",
                "type": ""
              }
            ],
            "src": "1659:632:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2366:116:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2412:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2421:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2424:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2414:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2414:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2414:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2387:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2396:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2383:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2383:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2408:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2379:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2379:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "2376:52:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2437:39:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2466:9:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2447:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2447:29:62"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2437:6:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2332:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2343:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2355:6:62",
                "type": ""
              }
            ],
            "src": "2296:186:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2591:224:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2637:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2646:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2649:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2639:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2639:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2639:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2612:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2621:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2608:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2608:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2633:2:62",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2604:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2604:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "2601:52:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2662:39:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2691:9:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2672:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2672:29:62"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2662:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2710:48:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2743:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2754:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2739:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2739:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2720:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2720:38:62"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2710:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2767:42:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2794:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2805:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2790:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2790:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2777:12:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2777:32:62"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2767:6:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2541:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2552:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2564:6:62",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2572:6:62",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2580:6:62",
                "type": ""
              }
            ],
            "src": "2487:328:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2915:92:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2925:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2937:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2948:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2933:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2933:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2925:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2967:9:62"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2992:6:62"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2985:6:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2985:14:62"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2978:6:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2978:22:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2960:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2960:41:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2960:41:62"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2884:9:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2895:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2906:4:62",
                "type": ""
              }
            ],
            "src": "2820:187:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3071:120:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3081:22:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3096:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3090:5:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3090:13:62"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3081:5:62"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3169:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3178:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3181:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3171:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3171:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3171:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3125:5:62"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3136:5:62"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3143:22:62",
                                "type": "",
                                "value": "0xffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3132:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3132:34:62"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3122:2:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3122:45:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3115:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3115:53:62"
                  },
                  "nodeType": "YulIf",
                  "src": "3112:73:62"
                }
              ]
            },
            "name": "abi_decode_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3050:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3061:5:62",
                "type": ""
              }
            ],
            "src": "3012:179:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3342:327:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3389:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3398:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3401:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3391:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3391:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3391:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3363:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3372:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3359:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3359:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3384:3:62",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3355:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3355:33:62"
                  },
                  "nodeType": "YulIf",
                  "src": "3352:53:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3414:49:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3453:9:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "3424:28:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3424:39:62"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3414:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3472:35:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3492:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3503:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3488:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3488:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3482:5:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3482:25:62"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3472:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3516:35:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3536:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3547:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3532:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3532:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3526:5:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3526:25:62"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3516:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3560:35:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3580:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3591:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3576:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3576:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3570:5:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3570:25:62"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3560:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3604:59:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3647:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3658:3:62",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3643:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3643:19:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "3614:28:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3614:49:62"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3604:6:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3276:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3287:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3299:6:62",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3307:6:62",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3315:6:62",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3323:6:62",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3331:6:62",
                "type": ""
              }
            ],
            "src": "3196:473:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3706:95:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3723:1:62",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3730:3:62",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3735:10:62",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3726:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3726:20:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3716:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3716:31:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3716:31:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3763:1:62",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3766:4:62",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3756:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3756:15:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3756:15:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3787:1:62",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3790:4:62",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3780:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3780:15:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3780:15:62"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3674:127:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3855:79:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3865:17:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3877:1:62"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3880:1:62"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3873:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3873:9:62"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3865:4:62"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3906:22:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3908:16:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3908:18:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3908:18:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "3897:4:62"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3903:1:62"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3894:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3894:11:62"
                  },
                  "nodeType": "YulIf",
                  "src": "3891:37:62"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3837:1:62",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3840:1:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3846:4:62",
                "type": ""
              }
            ],
            "src": "3806:128:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4003:358:62",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4013:16:62",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4028:1:62",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "4017:7:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4038:16:62",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "4047:7:62"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "4038:5:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4063:13:62",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "4071:5:62"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "4063:4:62"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4127:228:62",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4172:22:62",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4174:16:62"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4174:18:62"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4174:18:62"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "4147:4:62"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4161:1:62",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "4157:3:62"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4157:6:62"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "4165:4:62"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "4153:3:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4153:17:62"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "4144:2:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4144:27:62"
                        },
                        "nodeType": "YulIf",
                        "src": "4141:53:62"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4233:29:62",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4235:25:62",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "4248:5:62"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "4255:4:62"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "4244:3:62"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4244:16:62"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "4235:5:62"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "4214:8:62"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "4224:7:62"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "4210:3:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4210:22:62"
                        },
                        "nodeType": "YulIf",
                        "src": "4207:55:62"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4275:23:62",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "4287:4:62"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "4293:4:62"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "4283:3:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4283:15:62"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "4275:4:62"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4311:34:62",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "4327:7:62"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "4336:8:62"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "4323:3:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4323:22:62"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "4311:8:62"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "4096:8:62"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "4106:7:62"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4093:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4093:21:62"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4115:3:62",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4089:3:62",
                    "statements": []
                  },
                  "src": "4085:270:62"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "3967:5:62",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "3974:8:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "3987:5:62",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "3994:4:62",
                "type": ""
              }
            ],
            "src": "3939:422:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4425:747:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4463:52:62",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4477:10:62",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4486:1:62",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "4477:5:62"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "4500:5:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "4445:8:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4438:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4438:16:62"
                  },
                  "nodeType": "YulIf",
                  "src": "4435:80:62"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4548:52:62",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4562:10:62",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4571:1:62",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "4562:5:62"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "4585:5:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "4534:4:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4527:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4527:12:62"
                  },
                  "nodeType": "YulIf",
                  "src": "4524:76:62"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4636:52:62",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "4650:10:62",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4659:1:62",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "4650:5:62"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "4673:5:62"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "4629:59:62",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4634:1:62",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4704:123:62",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4739:22:62",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4741:16:62"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4741:18:62"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4741:18:62"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "4724:8:62"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4734:3:62",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "4721:2:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4721:17:62"
                            },
                            "nodeType": "YulIf",
                            "src": "4718:43:62"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "4774:25:62",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "4787:8:62"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4797:1:62",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4783:3:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4783:16:62"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "4774:5:62"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "4812:5:62"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "4697:130:62",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4702:1:62",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "4616:4:62"
                  },
                  "nodeType": "YulSwitch",
                  "src": "4609:218:62"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4925:70:62",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4939:28:62",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "4952:4:62"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "4958:8:62"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "4948:3:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4948:19:62"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "4939:5:62"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "4980:5:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "4849:4:62"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4855:2:62",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "4846:2:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4846:12:62"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "4863:8:62"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4873:2:62",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "4860:2:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4860:16:62"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4842:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4842:35:62"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "4886:4:62"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4892:3:62",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "4883:2:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4883:13:62"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "4901:8:62"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4911:2:62",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "4898:2:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4898:16:62"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4879:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4879:36:62"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4839:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4839:77:62"
                  },
                  "nodeType": "YulIf",
                  "src": "4836:159:62"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5004:57:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "5046:4:62"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "5052:8:62"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "5027:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5027:34:62"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "5008:7:62",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "5017:6:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5106:22:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5108:16:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5108:18:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5108:18:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "5076:7:62"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5093:1:62",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "5089:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5089:6:62"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "5097:6:62"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "5085:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5085:19:62"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5073:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5073:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "5070:58:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5137:29:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "5150:7:62"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "5159:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "5146:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5146:20:62"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "5137:5:62"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "4396:4:62",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "4402:8:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "4415:5:62",
                "type": ""
              }
            ],
            "src": "4366:806:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5247:61:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5257:45:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "5287:4:62"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "5293:8:62"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "5266:20:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5266:36:62"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "5257:5:62"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "5218:4:62",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "5224:8:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "5237:5:62",
                "type": ""
              }
            ],
            "src": "5177:131:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5365:116:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5375:20:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5390:1:62"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5393:1:62"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "5386:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5386:9:62"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "5375:7:62"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5453:22:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5455:16:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5455:18:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5455:18:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "5424:1:62"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5417:6:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5417:9:62"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "5431:1:62"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "5438:7:62"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5447:1:62"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "5434:3:62"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5434:15:62"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "5428:2:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5428:22:62"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "5414:2:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5414:37:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5407:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5407:45:62"
                  },
                  "nodeType": "YulIf",
                  "src": "5404:71:62"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5344:1:62",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5347:1:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "5353:7:62",
                "type": ""
              }
            ],
            "src": "5313:168:62"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
      "id": 62,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "449:3166:39:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "449:3166:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3401:212;;;;;;:::i;:::-;-1:-1:-1;;;3401:212:39;;;;;;;;;;;-1:-1:-1;;;;;;1167:33:62;;;1149:52;;1137:2;1122:18;3401:212:39;;;;;;;;93:33:60;;123:3;93:33;;;;;1358:25:62;;;1346:2;1331:18;93:33:60;1212:177:62;2722:190:39;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;156:40:60:-;;192:4;156:40;;3123:185:39;;;;;;:::i;:::-;;:::i;2459:300:44:-;;;;;;:::i;:::-;;:::i;1357:49:60:-;;1399:7;1357:49;;2301:211:39;;;;;;:::i;:::-;;:::i;:::-;;;2985:14:62;;2978:22;2960:41;;2948:2;2933:18;2301:211:39;2820:187:62;2722:190:39;-1:-1:-1;;;;;2863:21:39;;;;;;;:12;:21;;;;;;;;:33;;;;;;;;;2828:16;;2863:42;;:40;:42::i;:::-;2856:49;;2722:190;;;;;:::o;3123:185::-;-1:-1:-1;;;;;3259:21:39;;;3233:7;3259:21;;;:12;:21;;;;;;;;:33;;;;;;;;;;;:42;;:40;:42::i;2459:300:44:-;-1:-1:-1;;;;;2548:22:44;;2518:13;2548:22;;;:15;:22;;;;;:32;-1:-1:-1;;;2548:32:44;;;;2543:47;;-1:-1:-1;2589:1:44;;2459:300;-1:-1:-1;2459:300:44:o;2543:47::-;-1:-1:-1;;;;;2669:22:44;;;2600:31;2669:22;;;:15;:22;;;;;:35;;2732:20;2669:35;2732:18;:20::i;:::-;2724:28;2459:300;-1:-1:-1;;;2459:300:44:o;2301:211:39:-;-1:-1:-1;;;;;2454:21:39;;;2431:4;2454:21;;;:12;:21;;;;;;;;:33;;;;;;;;;;;:51;;2497:7;2454:42;:51::i;:::-;2447:58;2301:211;-1:-1:-1;;;;2301:211:39:o;12617:270:33:-;12677:16;12705:22;12730:19;12738:3;12730:7;:19::i;11488:112::-;11548:7;11574:19;11582:3;4556:18;;4474:107;730:553:50;818:13;857:14;885:13;926:17;957:22;992:9;-1:-1:-1;;;;;992:25:50;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;843:176;;;;;;;;;1057:1;1047:6;:11;;:41;;;-1:-1:-1;1074:14:50;;1047:41;:82;;;;1122:7;1104:25;;:15;:25;;;1047:82;:135;;;-1:-1:-1;302:7:50;1145:27;1163:9;1145:15;:27;:::i;:::-;:37;1047:135;1030:184;;;1200:14;;-1:-1:-1;;;1200:14:50;;;;;;;;;;;1030:184;1251:25;471:2;;1251:25;:::i;:::-;1233:43;;1241:6;1233:43;:::i;:::-;1225:51;730:553;-1:-1:-1;;;;;;730:553:50:o;11263:144:33:-;11340:4;4360:21;;;:14;;;:21;;;;;;:26;;11363:37;4264:129;5581:109;5637:16;5672:3;:11;;5665:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5581:109;;;:::o;14:173:62:-;82:20;;-1:-1:-1;;;;;131:31:62;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:808::-;289:6;297;305;313;321;374:3;362:9;353:7;349:23;345:33;342:53;;;391:1;388;381:12;342:53;414:29;433:9;414:29;:::i;:::-;404:39;;462:38;496:2;485:9;481:18;462:38;:::i;:::-;452:48;;547:2;536:9;532:18;519:32;509:42;;602:2;591:9;587:18;574:32;625:18;666:2;658:6;655:14;652:34;;;682:1;679;672:12;652:34;720:6;709:9;705:22;695:32;;765:7;758:4;754:2;750:13;746:27;736:55;;787:1;784;777:12;736:55;827:2;814:16;853:2;845:6;842:14;839:34;;;869:1;866;859:12;839:34;914:7;909:2;900:6;896:2;892:15;888:24;885:37;882:57;;;935:1;932;925:12;882:57;192:808;;;;-1:-1:-1;192:808:62;;-1:-1:-1;966:2:62;958:11;;988:6;192:808;-1:-1:-1;;;192:808:62:o;1394:260::-;1462:6;1470;1523:2;1511:9;1502:7;1498:23;1494:32;1491:52;;;1539:1;1536;1529:12;1491:52;1562:29;1581:9;1562:29;:::i;:::-;1552:39;;1610:38;1644:2;1633:9;1629:18;1610:38;:::i;:::-;1600:48;;1394:260;;;;;:::o;1659:632::-;1830:2;1882:21;;;1952:13;;1855:18;;;1974:22;;;1801:4;;1830:2;2053:15;;;;2027:2;2012:18;;;1801:4;2096:169;2110:6;2107:1;2104:13;2096:169;;;2171:13;;2159:26;;2240:15;;;;2205:12;;;;2132:1;2125:9;2096:169;;;-1:-1:-1;2282:3:62;;1659:632;-1:-1:-1;;;;;;1659:632:62:o;2296:186::-;2355:6;2408:2;2396:9;2387:7;2383:23;2379:32;2376:52;;;2424:1;2421;2414:12;2376:52;2447:29;2466:9;2447:29;:::i;2487:328::-;2564:6;2572;2580;2633:2;2621:9;2612:7;2608:23;2604:32;2601:52;;;2649:1;2646;2639:12;2601:52;2672:29;2691:9;2672:29;:::i;:::-;2662:39;;2720:38;2754:2;2743:9;2739:18;2720:38;:::i;:::-;2710:48;;2805:2;2794:9;2790:18;2777:32;2767:42;;2487:328;;;;;:::o;3012:179::-;3090:13;;3143:22;3132:34;;3122:45;;3112:73;;3181:1;3178;3171:12;3196:473;3299:6;3307;3315;3323;3331;3384:3;3372:9;3363:7;3359:23;3355:33;3352:53;;;3401:1;3398;3391:12;3352:53;3424:39;3453:9;3424:39;:::i;:::-;3414:49;;3503:2;3492:9;3488:18;3482:25;3472:35;;3547:2;3536:9;3532:18;3526:25;3516:35;;3591:2;3580:9;3576:18;3570:25;3560:35;;3614:49;3658:3;3647:9;3643:19;3614:49;:::i;:::-;3604:59;;3196:473;;;;;;;;:::o;3674:127::-;3735:10;3730:3;3726:20;3723:1;3716:31;3766:4;3763:1;3756:15;3790:4;3787:1;3780:15;3806:128;3873:9;;;3894:11;;;3891:37;;;3908:18;;:::i;3939:422::-;4028:1;4071:5;4028:1;4085:270;4106:7;4096:8;4093:21;4085:270;;;4165:4;4161:1;4157:6;4153:17;4147:4;4144:27;4141:53;;;4174:18;;:::i;:::-;4224:7;4214:8;4210:22;4207:55;;;4244:16;;;;4207:55;4323:22;;;;4283:15;;;;4085:270;;;4089:3;3939:422;;;;;:::o;4366:806::-;4415:5;4445:8;4435:80;;-1:-1:-1;4486:1:62;4500:5;;4435:80;4534:4;4524:76;;-1:-1:-1;4571:1:62;4585:5;;4524:76;4616:4;4634:1;4629:59;;;;4702:1;4697:130;;;;4609:218;;4629:59;4659:1;4650:10;;4673:5;;;4697:130;4734:3;4724:8;4721:17;4718:43;;;4741:18;;:::i;:::-;-1:-1:-1;;4797:1:62;4783:16;;4812:5;;4609:218;;4911:2;4901:8;4898:16;4892:3;4886:4;4883:13;4879:36;4873:2;4863:8;4860:16;4855:2;4849:4;4846:12;4842:35;4839:77;4836:159;;;-1:-1:-1;4948:19:62;;;4980:5;;4836:159;5027:34;5052:8;5046:4;5027:34;:::i;:::-;5097:6;5093:1;5089:6;5085:19;5076:7;5073:32;5070:58;;;5108:18;;:::i;:::-;5146:20;;4366:806;-1:-1:-1;;;4366:806:62:o;5177:131::-;5237:5;5266:36;5293:8;5287:4;5266:36;:::i;5313:168::-;5386:9;;;5417;;5434:15;;;5428:22;;5414:37;5404:71;;5455:18;;:::i",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport {TokenSupport} from \"./TokenSupport.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"./interfaces/PoolStructs.sol\";\n\n/**\n * @title NFT Collateral\n * @dev used for handling the deposit and withdrawal of NFTs as collateral.\n */\ncontract NFTCollateral is TokenSupport, IERC721Receiver {\n    using EnumerableSet for EnumerableSet.UintSet;\n\n    error InvalidNFT();\n\n    // track deposited NFTs for each user and NFT collection\n    mapping(address user => mapping(address nft => EnumerableSet.UintSet tokenIds)) depositedNFT;\n\n    /**\n     * @dev Internal function to deposit an NFT into the contract.\n     * @dev will revert if NFT is not allowed as collateral.\n     * @param nftAddress The address of the NFT contract.\n     * @param tokenId The ID of the NFT.\n     */\n    function _depositNFT(address nftAddress, uint256 tokenId) internal {\n        allowedToken(nftAddress);\n        IERC721(nftAddress).safeTransferFrom(\n            msg.sender,\n            address(this),\n            tokenId\n        );\n        depositedNFT[msg.sender][nftAddress].add(tokenId);\n    }\n\n    /**\n     * @dev Internal function to withdraw an NFT from the contract.\n     * @dev will revert if owner did not deposit NFT.\n     * @param owner The current owner of the NFT.\n     * @param recipient The recipient of the withdrawn NFT.\n     * @param nftAddress The address of the NFT contract.\n     * @param tokenId The ID of the NFT.\n     */\n    function _withdrawNFT(\n        address owner,\n        address recipient,\n        address nftAddress,\n        uint256 tokenId\n    ) internal {\n        if (!hasDepositedNFT(owner, nftAddress, tokenId)) revert InvalidNFT();\n        depositedNFT[owner][nftAddress].remove(tokenId);\n        IERC721(nftAddress).safeTransferFrom(address(this), recipient, tokenId);\n    }\n\n    /**\n     * @dev Checks if a specific NFT has been deposited by a user.\n     * @param account The address of the user.\n     * @param nftAddress The address of the NFT contract.\n     * @param tokenId The ID of the NFT.\n     * @return Whether the NFT has been deposited by the user.\n     */\n    function hasDepositedNFT(\n        address account,\n        address nftAddress,\n        uint256 tokenId\n    ) public view returns (bool) {\n        return depositedNFT[account][nftAddress].contains(tokenId);\n    }\n\n    /**\n     * @dev Gets the list of NFTs deposited by a user for a specific NFT contract.\n     * @param account The address of the user.\n     * @param nftAddress The address of the NFT contract.\n     */\n    function getDepositedNFTs(\n        address account,\n        address nftAddress\n    ) public view returns (uint256[] memory) {\n        return depositedNFT[account][nftAddress].values();\n    }\n\n    /**\n     * @dev Gets the count of NFTs deposited by a user for a specific NFT contract.\n     * @param account The address of the user.\n     * @param nftAddress The address of the NFT contract.\n     */\n    function getDepositedNFTCount(\n        address account,\n        address nftAddress\n    ) public view returns (uint256) {\n        return depositedNFT[account][nftAddress].length();\n    }\n\n    /**\n     * @dev ERC721 receiver callback to accept incoming NFT transfers.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC721Receiver.onERC721Received.selector;\n    }\n}\n",
  "sourcePath": "/Users/yosgi/freelancer/Volunteers3/contracts/contracts/NFTCollateral.sol",
  "ast": {
    "absolutePath": "project:/contracts/NFTCollateral.sol",
    "exportedSymbols": {
      "EnumerableSet": [
        8818
      ],
      "IERC165": [
        4690
      ],
      "IERC721": [
        2655
      ],
      "IERC721Receiver": [
        2673
      ],
      "NFTCollateral": [
        10444
      ],
      "PoolStructs": [
        14884
      ],
      "TokenSupport": [
        12932
      ]
    },
    "id": 10445,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10258,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:39"
      },
      {
        "absolutePath": "project:/contracts/TokenSupport.sol",
        "file": "./TokenSupport.sol",
        "id": 10260,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10445,
        "sourceUnit": 12933,
        "src": "59:48:39",
        "symbolAliases": [
          {
            "foreign": {
              "id": 10259,
              "name": "TokenSupport",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12932,
              "src": "67:12:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 10261,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10445,
        "sourceUnit": 2656,
        "src": "108:58:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 10262,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10445,
        "sourceUnit": 2674,
        "src": "167:66:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "id": 10263,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10445,
        "sourceUnit": 8819,
        "src": "234:65:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/PoolStructs.sol",
        "file": "./interfaces/PoolStructs.sol",
        "id": 10264,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10445,
        "sourceUnit": 14885,
        "src": "300:38:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10266,
              "name": "TokenSupport",
              "nameLocations": [
                "475:12:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12932,
              "src": "475:12:39"
            },
            "id": 10267,
            "nodeType": "InheritanceSpecifier",
            "src": "475:12:39"
          },
          {
            "baseName": {
              "id": 10268,
              "name": "IERC721Receiver",
              "nameLocations": [
                "489:15:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2673,
              "src": "489:15:39"
            },
            "id": 10269,
            "nodeType": "InheritanceSpecifier",
            "src": "489:15:39"
          }
        ],
        "canonicalName": "NFTCollateral",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10265,
          "nodeType": "StructuredDocumentation",
          "src": "340:108:39",
          "text": " @title NFT Collateral\n @dev used for handling the deposit and withdrawal of NFTs as collateral."
        },
        "fullyImplemented": true,
        "id": 10444,
        "linearizedBaseContracts": [
          10444,
          2673,
          12932,
          15824
        ],
        "name": "NFTCollateral",
        "nameLocation": "458:13:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 10273,
            "libraryName": {
              "id": 10270,
              "name": "EnumerableSet",
              "nameLocations": [
                "517:13:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8818,
              "src": "517:13:39"
            },
            "nodeType": "UsingForDirective",
            "src": "511:46:39",
            "typeName": {
              "id": 10272,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10271,
                "name": "EnumerableSet.UintSet",
                "nameLocations": [
                  "535:13:39",
                  "549:7:39"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8688,
                "src": "535:21:39"
              },
              "referencedDeclaration": 8688,
              "src": "535:21:39",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$8688_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "errorSelector": "0f3e2a3e",
            "id": 10275,
            "name": "InvalidNFT",
            "nameLocation": "569:10:39",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 10274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:2:39"
            },
            "src": "563:19:39"
          },
          {
            "constant": false,
            "id": 10282,
            "mutability": "mutable",
            "name": "depositedNFT",
            "nameLocation": "729:12:39",
            "nodeType": "VariableDeclaration",
            "scope": 10444,
            "src": "649:92:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct EnumerableSet.UintSet))"
            },
            "typeName": {
              "id": 10281,
              "keyName": "user",
              "keyNameLocation": "665:4:39",
              "keyType": {
                "id": 10276,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "657:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "649:79:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct EnumerableSet.UintSet))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 10280,
                "keyName": "nft",
                "keyNameLocation": "689:3:39",
                "keyType": {
                  "id": 10277,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "681:7:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "673:54:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$",
                  "typeString": "mapping(address => struct EnumerableSet.UintSet)"
                },
                "valueName": "tokenIds",
                "valueNameLocation": "718:8:39",
                "valueType": {
                  "id": 10279,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 10278,
                    "name": "EnumerableSet.UintSet",
                    "nameLocations": [
                      "696:13:39",
                      "710:7:39"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8688,
                    "src": "696:21:39"
                  },
                  "referencedDeclaration": 8688,
                  "src": "696:21:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UintSet_$8688_storage_ptr",
                    "typeString": "struct EnumerableSet.UintSet"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10317,
              "nodeType": "Block",
              "src": "1058:228:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10291,
                        "name": "nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10285,
                        "src": "1081:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10290,
                      "name": "allowedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12931,
                      "src": "1068:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 10292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1068:24:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10293,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:24:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10298,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1152:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1156:6:39",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1152:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10302,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1184:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTCollateral_$10444",
                              "typeString": "contract NFTCollateral"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTCollateral_$10444",
                              "typeString": "contract NFTCollateral"
                            }
                          ],
                          "id": 10301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1176:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10300,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1176:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1176:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10304,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10287,
                        "src": "1203:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10295,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10285,
                            "src": "1110:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10294,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2655,
                          "src": "1102:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$2655_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 10296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1102:19:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$2655",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 10297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1122:16:39",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2610,
                      "src": "1102:36:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 10305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1102:118:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10306,
                  "nodeType": "ExpressionStatement",
                  "src": "1102:118:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10314,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10287,
                        "src": "1271:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 10307,
                            "name": "depositedNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10282,
                            "src": "1230:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct EnumerableSet.UintSet storage ref))"
                            }
                          },
                          "id": 10311,
                          "indexExpression": {
                            "expression": {
                              "id": 10308,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1243:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1247:6:39",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1243:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1230:24:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 10312,
                        "indexExpression": {
                          "id": 10310,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10285,
                          "src": "1255:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1230:36:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$8688_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 10313,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1267:3:39",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8709,
                      "src": "1230:40:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$8688_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$8688_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 10315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1230:49:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10316,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:49:39"
                }
              ]
            },
            "documentation": {
              "id": 10283,
              "nodeType": "StructuredDocumentation",
              "src": "748:238:39",
              "text": " @dev Internal function to deposit an NFT into the contract.\n @dev will revert if NFT is not allowed as collateral.\n @param nftAddress The address of the NFT contract.\n @param tokenId The ID of the NFT."
            },
            "id": 10318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositNFT",
            "nameLocation": "1000:11:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10285,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "1020:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "1012:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10287,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1040:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "1032:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:37:39"
            },
            "returnParameters": {
              "id": 10289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1058:0:39"
            },
            "scope": 10444,
            "src": "991:295:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10361,
              "nodeType": "Block",
              "src": "1779:224:39",
              "statements": [
                {
                  "condition": {
                    "id": 10335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1793:44:39",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 10331,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10321,
                          "src": "1810:5:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 10332,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10325,
                          "src": "1817:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 10333,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10327,
                          "src": "1829:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10330,
                        "name": "hasDepositedNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10384,
                        "src": "1794:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) view returns (bool)"
                        }
                      },
                      "id": 10334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1794:43:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10339,
                  "nodeType": "IfStatement",
                  "src": "1789:69:39",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10336,
                        "name": "InvalidNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10275,
                        "src": "1846:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 10337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1846:12:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 10338,
                    "nodeType": "RevertStatement",
                    "src": "1839:19:39"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10346,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10327,
                        "src": "1907:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 10340,
                            "name": "depositedNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10282,
                            "src": "1868:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct EnumerableSet.UintSet storage ref))"
                            }
                          },
                          "id": 10343,
                          "indexExpression": {
                            "id": 10341,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10321,
                            "src": "1881:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1868:19:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 10344,
                        "indexExpression": {
                          "id": 10342,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10325,
                          "src": "1888:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1868:31:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$8688_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 10345,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1900:6:39",
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8730,
                      "src": "1868:38:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$8688_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$8688_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 10347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:47:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10348,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:47:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10355,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1970:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTCollateral_$10444",
                              "typeString": "contract NFTCollateral"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTCollateral_$10444",
                              "typeString": "contract NFTCollateral"
                            }
                          ],
                          "id": 10354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1962:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10353,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1962:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1962:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10357,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10323,
                        "src": "1977:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10358,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10327,
                        "src": "1988:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10350,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10325,
                            "src": "1933:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10349,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2655,
                          "src": "1925:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$2655_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 10351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1925:19:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$2655",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 10352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1945:16:39",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2610,
                      "src": "1925:36:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 10359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1925:71:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10360,
                  "nodeType": "ExpressionStatement",
                  "src": "1925:71:39"
                }
              ]
            },
            "documentation": {
              "id": 10319,
              "nodeType": "StructuredDocumentation",
              "src": "1292:342:39",
              "text": " @dev Internal function to withdraw an NFT from the contract.\n @dev will revert if owner did not deposit NFT.\n @param owner The current owner of the NFT.\n @param recipient The recipient of the withdrawn NFT.\n @param nftAddress The address of the NFT contract.\n @param tokenId The ID of the NFT."
            },
            "id": 10362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawNFT",
            "nameLocation": "1648:12:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10321,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1678:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10362,
                  "src": "1670:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10323,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1701:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10362,
                  "src": "1693:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1693:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10325,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "1728:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10362,
                  "src": "1720:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10327,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1756:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10362,
                  "src": "1748:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1748:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1660:109:39"
            },
            "returnParameters": {
              "id": 10329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1779:0:39"
            },
            "scope": 10444,
            "src": "1639:364:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10383,
              "nodeType": "Block",
              "src": "2437:75:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10380,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10369,
                        "src": "2497:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 10374,
                            "name": "depositedNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10282,
                            "src": "2454:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct EnumerableSet.UintSet storage ref))"
                            }
                          },
                          "id": 10376,
                          "indexExpression": {
                            "id": 10375,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10365,
                            "src": "2467:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2454:21:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 10378,
                        "indexExpression": {
                          "id": 10377,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10367,
                          "src": "2476:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2454:33:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$8688_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 10379,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2488:8:39",
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8751,
                      "src": "2454:42:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$8688_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$8688_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (bool)"
                      }
                    },
                    "id": 10381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2454:51:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10373,
                  "id": 10382,
                  "nodeType": "Return",
                  "src": "2447:58:39"
                }
              ]
            },
            "documentation": {
              "id": 10363,
              "nodeType": "StructuredDocumentation",
              "src": "2009:287:39",
              "text": " @dev Checks if a specific NFT has been deposited by a user.\n @param account The address of the user.\n @param nftAddress The address of the NFT contract.\n @param tokenId The ID of the NFT.\n @return Whether the NFT has been deposited by the user."
            },
            "functionSelector": "f6aa13f2",
            "id": 10384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasDepositedNFT",
            "nameLocation": "2310:15:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10365,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2343:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10384,
                  "src": "2335:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10367,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "2368:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10384,
                  "src": "2360:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2360:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10369,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2396:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10384,
                  "src": "2388:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2388:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2325:84:39"
            },
            "returnParameters": {
              "id": 10373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10372,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10384,
                  "src": "2431:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10371,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2431:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2430:6:39"
            },
            "scope": 10444,
            "src": "2301:211:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10403,
              "nodeType": "Block",
              "src": "2846:66:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 10395,
                            "name": "depositedNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10282,
                            "src": "2863:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct EnumerableSet.UintSet storage ref))"
                            }
                          },
                          "id": 10397,
                          "indexExpression": {
                            "id": 10396,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10387,
                            "src": "2876:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2863:21:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 10399,
                        "indexExpression": {
                          "id": 10398,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10389,
                          "src": "2885:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2863:33:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$8688_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 10400,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2897:6:39",
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8817,
                      "src": "2863:40:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$8688_storage_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$attached_to$_t_struct$_UintSet_$8688_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256[] memory)"
                      }
                    },
                    "id": 10401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2863:42:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 10394,
                  "id": 10402,
                  "nodeType": "Return",
                  "src": "2856:49:39"
                }
              ]
            },
            "documentation": {
              "id": 10385,
              "nodeType": "StructuredDocumentation",
              "src": "2518:199:39",
              "text": " @dev Gets the list of NFTs deposited by a user for a specific NFT contract.\n @param account The address of the user.\n @param nftAddress The address of the NFT contract."
            },
            "functionSelector": "26b45de5",
            "id": 10404,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDepositedNFTs",
            "nameLocation": "2731:16:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10387,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2765:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10404,
                  "src": "2757:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10389,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "2790:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10404,
                  "src": "2782:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2782:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2747:59:39"
            },
            "returnParameters": {
              "id": 10394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10393,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10404,
                  "src": "2828:16:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10391,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2828:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10392,
                    "nodeType": "ArrayTypeName",
                    "src": "2828:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2827:18:39"
            },
            "scope": 10444,
            "src": "2722:190:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10422,
              "nodeType": "Block",
              "src": "3242:66:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 10414,
                            "name": "depositedNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10282,
                            "src": "3259:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct EnumerableSet.UintSet storage ref))"
                            }
                          },
                          "id": 10416,
                          "indexExpression": {
                            "id": 10415,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10407,
                            "src": "3272:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3259:21:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8688_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 10418,
                        "indexExpression": {
                          "id": 10417,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10409,
                          "src": "3281:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3259:33:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$8688_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 10419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3293:6:39",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8766,
                      "src": "3259:40:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$8688_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_UintSet_$8688_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 10420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3259:42:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10413,
                  "id": 10421,
                  "nodeType": "Return",
                  "src": "3252:49:39"
                }
              ]
            },
            "documentation": {
              "id": 10405,
              "nodeType": "StructuredDocumentation",
              "src": "2918:200:39",
              "text": " @dev Gets the count of NFTs deposited by a user for a specific NFT contract.\n @param account The address of the user.\n @param nftAddress The address of the NFT contract."
            },
            "functionSelector": "b4240c99",
            "id": 10423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDepositedNFTCount",
            "nameLocation": "3132:20:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10407,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3170:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10423,
                  "src": "3162:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3162:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10409,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "3195:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 10423,
                  "src": "3187:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3187:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3152:59:39"
            },
            "returnParameters": {
              "id": 10413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10423,
                  "src": "3233:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3232:9:39"
            },
            "scope": 10444,
            "src": "3123:185:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2672
            ],
            "body": {
              "id": 10442,
              "nodeType": "Block",
              "src": "3548:65:39",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 10438,
                        "name": "IERC721Receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2673,
                        "src": "3565:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2673_$",
                          "typeString": "type(contract IERC721Receiver)"
                        }
                      },
                      "id": 10439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3581:16:39",
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2672,
                      "src": "3565:32:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                        "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                      }
                    },
                    "id": 10440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3598:8:39",
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "3565:41:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 10437,
                  "id": 10441,
                  "nodeType": "Return",
                  "src": "3558:48:39"
                }
              ]
            },
            "documentation": {
              "id": 10424,
              "nodeType": "StructuredDocumentation",
              "src": "3314:82:39",
              "text": " @dev ERC721 receiver callback to accept incoming NFT transfers."
            },
            "functionSelector": "150b7a02",
            "id": 10443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "3410:16:39",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10434,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3522:8:39"
            },
            "parameters": {
              "id": 10433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10426,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10443,
                  "src": "3436:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3436:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10428,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10443,
                  "src": "3453:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3453:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10430,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10443,
                  "src": "3470:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3470:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10443,
                  "src": "3487:14:39",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10431,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3487:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3426:81:39"
            },
            "returnParameters": {
              "id": 10437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10436,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10443,
                  "src": "3540:6:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 10435,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3540:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3539:8:39"
            },
            "scope": 10444,
            "src": "3401:212:39",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10445,
        "src": "449:3166:39",
        "usedErrors": [
          10275,
          12787,
          12791,
          12796,
          14889
        ],
        "usedEvents": [
          12804
        ]
      }
    ],
    "src": "33:3583:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-22T11:34:51.884Z",
  "devdoc": {
    "details": "used for handling the deposit and withdrawal of NFTs as collateral.",
    "kind": "dev",
    "methods": {
      "getDepositedNFTCount(address,address)": {
        "details": "Gets the count of NFTs deposited by a user for a specific NFT contract.",
        "params": {
          "account": "The address of the user.",
          "nftAddress": "The address of the NFT contract."
        }
      },
      "getDepositedNFTs(address,address)": {
        "details": "Gets the list of NFTs deposited by a user for a specific NFT contract.",
        "params": {
          "account": "The address of the user.",
          "nftAddress": "The address of the NFT contract."
        }
      },
      "getTokenPrice(address)": {
        "details": "Gets the USD price of a supported token using Chainlink Oracle.",
        "params": {
          "token": "The address of the token."
        }
      },
      "hasDepositedNFT(address,address,uint256)": {
        "details": "Checks if a specific NFT has been deposited by a user.",
        "params": {
          "account": "The address of the user.",
          "nftAddress": "The address of the NFT contract.",
          "tokenId": "The ID of the NFT."
        },
        "returns": {
          "_0": "Whether the NFT has been deposited by the user."
        }
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "ERC721 receiver callback to accept incoming NFT transfers."
      }
    },
    "title": "NFT Collateral",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "TokenNotSupported()": [
        {
          "notice": "ERRORS "
        }
      ]
    },
    "events": {
      "AddSupportedToken(address,uint8)": {
        "notice": "EVENTS "
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}