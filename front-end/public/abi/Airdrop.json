{
  "contractName": "Airdrop",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_airdropAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AirdropClaimed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "airdropAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "claimAirdrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_airdropAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract must be pre-funded with enough tokens for the airdrop.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_airdropAmount\":\"The amount of tokens each user can claim (in the token's smallest unit).\",\"tokenAddress\":\"The address of the ERC20 token contract.\"}},\"withdrawTokens(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to withdraw (in the token's smallest unit).\"}}},\"title\":\"Airdrop Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimAirdrop()\":{\"notice\":\"Allows a user to claim the airdrop. Each address can only claim once.\"},\"constructor\":{\"notice\":\"Constructor sets the token address and airdrop amount.\"},\"withdrawTokens(uint256)\":{\"notice\":\"Allows the owner to withdraw tokens from the contract.\"}},\"notice\":\"This contract allows users to claim an airdrop of tokens. Each address can claim only once.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Airdrop.sol\":\"Airdrop\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Airdrop.sol\":{\"keccak256\":\"0x2ee94f94f6d1946338d03208258cfc18ea83ec81cd4bed320e246374afeddc1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2c5f32a353f579fed162d0800f880dd6c3942ccdad0567b6a93b5722848deab\",\"dweb:/ipfs/Qmam6ZzeF3FmQexyf3rjZmsrCdwJC7UZud6L7wGe5JNSQi\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106b33803806106b383398101604081905261002f916100ba565b6001600160a01b0382166100895760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e20616464726573730000000000000000000000604482015260640160405180910390fd5b600080546001600160a01b039093166001600160a01b031993841617905560015560038054909116331790556100f4565b600080604083850312156100cd57600080fd5b82516001600160a01b03811681146100e457600080fd5b6020939093015192949293505050565b6105b0806101036000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063315a095d146100675780635b88349d1461007c5780638da5cb5b14610084578063c884ef83146100b4578063fc0c546a146100e7578063fc2ea8a5146100fa575b600080fd5b61007a6100753660046104f6565b610111565b005b61007a6102ca565b600354610097906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d76100c236600461050f565b60026020526000908152604090205460ff1681565b60405190151581526020016100ab565b600054610097906001600160a01b031681565b61010360015481565b6040519081526020016100ab565b6003546001600160a01b0316331461015c5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6000546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c8919061053f565b101561020a5760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b6044820152606401610153565b60005460035460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af115801561025f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102839190610558565b6102c75760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610153565b50565b3360009081526002602052604090205460ff161561032a5760405162461bcd60e51b815260206004820152601760248201527f41697264726f7020616c726561647920636c61696d65640000000000000000006044820152606401610153565b6001546000546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610399919061053f565b10156103e75760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f75676820746f6b656e7320696e20636f6e74726163740000006044820152606401610153565b33600081815260026020526040808220805460ff1916600190811790915591549154905163a9059cbb60e01b8152600481019390935260248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190610558565b6104bc5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610153565b60015460405190815233907f650e45f04ef8a0c267b2f78d983913f69ae3a353b2b32de5429307522be0ab559060200160405180910390a2565b60006020828403121561050857600080fd5b5035919050565b60006020828403121561052157600080fd5b81356001600160a01b038116811461053857600080fd5b9392505050565b60006020828403121561055157600080fd5b5051919050565b60006020828403121561056a57600080fd5b8151801515811461053857600080fdfea264697066735822122008a1e81a2e24748dcc485fc0b41e4b239a1468dcea50903f5e0173e22713624164736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063315a095d146100675780635b88349d1461007c5780638da5cb5b14610084578063c884ef83146100b4578063fc0c546a146100e7578063fc2ea8a5146100fa575b600080fd5b61007a6100753660046104f6565b610111565b005b61007a6102ca565b600354610097906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d76100c236600461050f565b60026020526000908152604090205460ff1681565b60405190151581526020016100ab565b600054610097906001600160a01b031681565b61010360015481565b6040519081526020016100ab565b6003546001600160a01b0316331461015c5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6000546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c8919061053f565b101561020a5760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b6044820152606401610153565b60005460035460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af115801561025f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102839190610558565b6102c75760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610153565b50565b3360009081526002602052604090205460ff161561032a5760405162461bcd60e51b815260206004820152601760248201527f41697264726f7020616c726561647920636c61696d65640000000000000000006044820152606401610153565b6001546000546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610399919061053f565b10156103e75760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f75676820746f6b656e7320696e20636f6e74726163740000006044820152606401610153565b33600081815260026020526040808220805460ff1916600190811790915591549154905163a9059cbb60e01b8152600481019390935260248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190610558565b6104bc5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610153565b60015460405190815233907f650e45f04ef8a0c267b2f78d983913f69ae3a353b2b32de5429307522be0ab559060200160405180910390a2565b60006020828403121561050857600080fd5b5035919050565b60006020828403121561052157600080fd5b81356001600160a01b038116811461053857600080fd5b9392505050565b60006020828403121561055157600080fd5b5051919050565b60006020828403121561056a57600080fd5b8151801515811461053857600080fdfea264697066735822122008a1e81a2e24748dcc485fc0b41e4b239a1468dcea50903f5e0173e22713624164736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:717:53",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:53",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "112:253:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "158:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "133:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "142:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "129:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "129:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "154:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "125:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "122:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "183:29:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "202:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "196:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:16:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "187:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "275:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "287:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "277:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "277:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "234:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "245:5:53"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "260:3:53",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "265:1:53",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "256:3:53"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "256:11:53"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "269:1:53",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "252:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "252:19:53"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "241:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "241:31:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "231:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "231:42:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "224:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:50:53"
                  },
                  "nodeType": "YulIf",
                  "src": "221:70:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "300:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "310:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "300:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "324:35:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "344:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "355:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "340:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "340:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "334:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "334:25:53"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "324:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "70:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "81:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "93:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "101:6:53",
                "type": ""
              }
            ],
            "src": "14:351:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "544:171:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "561:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "572:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "554:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "554:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "554:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "595:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "606:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "591:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "591:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "611:2:53",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "584:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "584:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "584:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "634:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "645:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "630:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "630:18:53"
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "650:23:53",
                        "type": "",
                        "value": "Invalid token address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "623:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "623:51:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "623:51:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "683:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "695:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "706:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "691:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "691:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "683:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "521:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "535:4:53",
                "type": ""
              }
            ],
            "src": "370:345:53"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid token address\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 53,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3785:53",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:53",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:53",
                "type": ""
              }
            ],
            "src": "14:180:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:102:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "367:6:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "383:3:53",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "388:1:53",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "379:11:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "392:1:53",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "375:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "375:19:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "363:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "363:32:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:51:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:51:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:53",
                "type": ""
              }
            ],
            "src": "199:203:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "477:216:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "523:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "532:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "535:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "525:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "525:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "525:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "498:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "507:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "494:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "494:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "519:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "490:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "487:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "548:36:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "574:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "561:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "561:23:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "552:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "647:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "656:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "659:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "649:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "649:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "649:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "606:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "617:5:53"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "632:3:53",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "637:1:53",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "628:3:53"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "628:11:53"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "641:1:53",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "624:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "624:19:53"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "613:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "613:31:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "603:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "603:42:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "596:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:50:53"
                  },
                  "nodeType": "YulIf",
                  "src": "593:70:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "672:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "682:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "672:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "443:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "454:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "466:6:53",
                "type": ""
              }
            ],
            "src": "407:286:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "793:92:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "803:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "815:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "826:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "811:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "803:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "845:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "870:6:53"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "863:6:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "863:14:53"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "856:6:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "856:22:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "838:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "838:41:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "838:41:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "762:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "773:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "784:4:53",
                "type": ""
              }
            ],
            "src": "698:187:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1006:102:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1016:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1028:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1039:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1024:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1024:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1016:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1058:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1073:6:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1089:3:53",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1094:1:53",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1085:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1085:11:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1098:1:53",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1081:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1081:19:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1069:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1069:32:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1051:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:51:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1051:51:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$8520__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "975:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "986:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "997:4:53",
                "type": ""
              }
            ],
            "src": "890:218:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1214:76:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1224:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1236:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1247:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1232:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1232:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1224:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1266:9:53"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1277:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1259:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1259:25:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1259:25:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1183:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1194:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1205:4:53",
                "type": ""
              }
            ],
            "src": "1113:177:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1469:158:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1486:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1497:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1479:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1479:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1479:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1520:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1531:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1516:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1516:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1536:1:53",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1509:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1509:29:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1509:29:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1558:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1569:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1554:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1554:18:53"
                      },
                      {
                        "hexValue": "4e6f74206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1574:11:53",
                        "type": "",
                        "value": "Not owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1547:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:39:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1547:39:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1595:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1607:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1618:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1603:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1603:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1595:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1446:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1460:4:53",
                "type": ""
              }
            ],
            "src": "1295:332:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1713:103:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1759:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1768:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1771:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1761:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1761:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1761:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1734:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1743:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1730:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1730:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1755:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1726:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1726:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "1723:52:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1784:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1800:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1794:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1794:16:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1784:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1679:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1690:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1702:6:53",
                "type": ""
              }
            ],
            "src": "1632:184:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1995:167:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2012:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2023:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2005:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2005:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2005:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2046:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2057:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2042:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2042:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2062:2:53",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2035:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2035:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2035:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2085:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2096:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2081:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2081:18:53"
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2101:19:53",
                        "type": "",
                        "value": "Not enough tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2074:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2074:47:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2074:47:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2130:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2142:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2153:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2138:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2138:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2130:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1972:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1986:4:53",
                "type": ""
              }
            ],
            "src": "1821:341:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2296:145:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2306:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2318:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2329:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2314:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2314:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2306:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2348:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2363:6:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2379:3:53",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2384:1:53",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2375:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2375:11:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2388:1:53",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2371:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2371:19:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2359:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2359:32:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2341:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2341:51:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2341:51:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2412:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2423:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2408:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2408:18:53"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2428:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2401:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2401:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2401:34:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2257:9:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2268:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2276:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2287:4:53",
                "type": ""
              }
            ],
            "src": "2167:274:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2524:199:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2570:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2579:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2582:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2572:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2572:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2572:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2545:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2554:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2541:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2541:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2566:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2537:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2537:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2534:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2595:29:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2614:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2608:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2608:16:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2599:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2677:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2686:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2689:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2679:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2679:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2679:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2646:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2667:5:53"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2660:6:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2660:13:53"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2653:6:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2653:21:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2643:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2643:32:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2636:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2636:40:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2633:60:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2702:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2712:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2702:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2490:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2501:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2513:6:53",
                "type": ""
              }
            ],
            "src": "2446:277:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2902:171:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2919:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2930:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2912:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2912:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2912:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2953:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2964:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2949:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2949:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2969:2:53",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2942:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2942:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2942:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2992:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3003:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2988:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2988:18:53"
                      },
                      {
                        "hexValue": "546f6b656e207472616e73666572206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3008:23:53",
                        "type": "",
                        "value": "Token transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2981:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2981:51:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2981:51:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3041:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3053:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3064:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3049:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3049:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3041:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2879:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2893:4:53",
                "type": ""
              }
            ],
            "src": "2728:345:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3252:173:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3269:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3280:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3262:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3262:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3262:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3303:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3314:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3299:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3299:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3319:2:53",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3292:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3292:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3292:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3342:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3353:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3338:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3338:18:53"
                      },
                      {
                        "hexValue": "41697264726f7020616c726561647920636c61696d6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3358:25:53",
                        "type": "",
                        "value": "Airdrop already claimed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3331:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3331:53:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3331:53:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3393:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3405:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3416:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3401:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3401:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3393:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b7f836860b3581574517ce41ee0415fee825593a2d439bddd5b700e1bd865e9a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3229:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3243:4:53",
                "type": ""
              }
            ],
            "src": "3078:347:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3604:179:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3621:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3632:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3614:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3614:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3614:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3655:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3666:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3651:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3651:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3671:2:53",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3644:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3644:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3694:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3705:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3690:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3690:18:53"
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e20636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3710:31:53",
                        "type": "",
                        "value": "Not enough tokens in contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3683:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3683:59:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3683:59:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3751:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3763:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3774:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3759:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3759:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3751:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3581:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3595:4:53",
                "type": ""
              }
            ],
            "src": "3430:353:53"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$8520__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Not enough tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b7f836860b3581574517ce41ee0415fee825593a2d439bddd5b700e1bd865e9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Airdrop already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Not enough tokens in contract\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 53,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "444:1970:29:-:0;;;1313:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1389:26:29;;1381:60;;;;-1:-1:-1;;;1381:60:29;;572:2:53;1381:60:29;;;554:21:53;611:2;591:18;;;584:30;650:23;630:18;;;623:51;691:18;;1381:60:29;;;;;;;;1451:5;:28;;-1:-1:-1;;;;;1451:28:29;;;-1:-1:-1;;;;;;1451:28:29;;;;;;;1489:30;1529:5;:18;;;;;1537:10;1529:18;;;444:1970;;14:351:53;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:53;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:53:o;370:345::-;444:1970:29;;;;;;",
  "deployedSourceMap": "444:1970:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:219;;;;;;:::i;:::-;;:::i;:::-;;1646:383;;;:::i;772:20::-;;;;;-1:-1:-1;;;;;772:20:29;;;;;;-1:-1:-1;;;;;363:32:53;;;345:51;;333:2;318:18;772:20:29;;;;;;;;664:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;863:14:53;;856:22;838:41;;826:2;811:18;664:39:29;698:187:53;467:19:29;;;;;-1:-1:-1;;;;;467:19:29;;;553:28;;;;;;;;;1259:25:53;;;1247:2;1232:18;553:28:29;1113:177:53;2193:219:29;1027:5;;-1:-1:-1;;;;;1027:5:29;1013:10;:19;1005:41;;;;-1:-1:-1;;;1005:41:29;;1497:2:53;1005:41:29;;;1479:21:53;1536:1;1516:18;;;1509:29;-1:-1:-1;;;1554:18:53;;;1547:39;1603:18;;1005:41:29;;;;;;;;;2270:5:::1;::::0;:30:::1;::::0;-1:-1:-1;;;2270:30:29;;2294:4:::1;2270:30;::::0;::::1;345:51:53::0;2304:6:29;;-1:-1:-1;;;;;2270:5:29::1;::::0;:15:::1;::::0;318:18:53;;2270:30:29::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;2262:70;;;::::0;-1:-1:-1;;;2262:70:29;;2023:2:53;2262:70:29::1;::::0;::::1;2005:21:53::0;2062:2;2042:18;;;2035:30;-1:-1:-1;;;2081:18:53;;;2074:47;2138:18;;2262:70:29::1;1821:341:53::0;2262:70:29::1;2350:5;::::0;2365::::1;::::0;2350:29:::1;::::0;-1:-1:-1;;;2350:29:29;;-1:-1:-1;;;;;2365:5:29;;::::1;2350:29;::::0;::::1;2341:51:53::0;2408:18;;;2401:34;;;2350:5:29;::::1;::::0;:14:::1;::::0;2314:18:53;;2350:29:29::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2342:63;;;::::0;-1:-1:-1;;;2342:63:29;;2930:2:53;2342:63:29::1;::::0;::::1;2912:21:53::0;2969:2;2949:18;;;2942:30;-1:-1:-1;;;2988:18:53;;;2981:51;3049:18;;2342:63:29::1;2728:345:53::0;2342:63:29::1;2193:219:::0;:::o;1646:383::-;1706:10;1698:19;;;;:7;:19;;;;;;;;1697:20;1689:56;;;;-1:-1:-1;;;1689:56:29;;3280:2:53;1689:56:29;;;3262:21:53;3319:2;3299:18;;;3292:30;3358:25;3338:18;;;3331:53;3401:18;;1689:56:29;3078:347:53;1689:56:29;1797:13;;1763:5;;:30;;-1:-1:-1;;;1763:30:29;;1787:4;1763:30;;;345:51:53;-1:-1:-1;;;;;1763:5:29;;;;:15;;318:18:53;;1763:30:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;1755:89;;;;-1:-1:-1;;;1755:89:29;;3632:2:53;1755:89:29;;;3614:21:53;3671:2;3651:18;;;3644:30;3710:31;3690:18;;;3683:59;3759:18;;1755:89:29;3430:353:53;1755:89:29;1863:10;1855:19;;;;:7;:19;;;;;;:26;;-1:-1:-1;;1855:26:29;1877:4;1855:26;;;;;;1899:5;;1926:13;;1899:41;;-1:-1:-1;;;1899:41:29;;;;;2341:51:53;;;;2408:18;;;2401:34;-1:-1:-1;;;;;1899:5:29;;:14;;2314:18:53;;1899:41:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1891:75;;;;-1:-1:-1;;;1891:75:29;;2930:2:53;1891:75:29;;;2912:21:53;2969:2;2949:18;;;2942:30;-1:-1:-1;;;2988:18:53;;;2981:51;3049:18;;1891:75:29;2728:345:53;1891:75:29;2008:13;;1981:41;;1259:25:53;;;1996:10:29;;1981:41;;1247:2:53;1232:18;1981:41:29;;;;;;;1646:383::o;14:180:53:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:53;;14:180;-1:-1:-1;14:180:53:o;407:286::-;466:6;519:2;507:9;498:7;494:23;490:32;487:52;;;535:1;532;525:12;487:52;561:23;;-1:-1:-1;;;;;613:31:53;;603:42;;593:70;;659:1;656;649:12;593:70;682:5;407:286;-1:-1:-1;;;407:286:53:o;1632:184::-;1702:6;1755:2;1743:9;1734:7;1730:23;1726:32;1723:52;;;1771:1;1768;1761:12;1723:52;-1:-1:-1;1794:16:53;;1632:184;-1:-1:-1;1632:184:53:o;2446:277::-;2513:6;2566:2;2554:9;2545:7;2541:23;2537:32;2534:52;;;2582:1;2579;2572:12;2534:52;2614:9;2608:16;2667:5;2660:13;2653:21;2646:5;2643:32;2633:60;;2689:1;2686;2679:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface IERC20 {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function balanceOf(address account) external view returns (uint256);\n}\n\n/// @title Airdrop Contract\n/// @notice This contract allows users to claim an airdrop of tokens. Each address can claim only once.\n/// @dev The contract must be pre-funded with enough tokens for the airdrop.\ncontract Airdrop {\n    IERC20 public token;             // The ERC20 token contract used for the airdrop\n    uint256 public airdropAmount;    // The amount of tokens each user receives (in the token's smallest unit)\n    mapping(address => bool) public claimed;  // Mapping to track which addresses have claimed the airdrop\n\n    address public owner;            // The owner of the contract\n\n    event AirdropClaimed(address indexed claimant, uint256 amount);\n\n    /// @notice Modifier to restrict functions to only the owner.\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not owner\");\n        _;\n    }\n\n    /// @notice Constructor sets the token address and airdrop amount.\n    /// @param tokenAddress The address of the ERC20 token contract.\n    /// @param _airdropAmount The amount of tokens each user can claim (in the token's smallest unit).\n    constructor(address tokenAddress, uint256 _airdropAmount) {\n        require(tokenAddress != address(0), \"Invalid token address\");\n        token = IERC20(tokenAddress);\n        airdropAmount = _airdropAmount;\n        owner = msg.sender;\n    }\n\n    /// @notice Allows a user to claim the airdrop. Each address can only claim once.\n    function claimAirdrop() external {\n        require(!claimed[msg.sender], \"Airdrop already claimed\");\n        require(token.balanceOf(address(this)) >= airdropAmount, \"Not enough tokens in contract\");\n\n        claimed[msg.sender] = true;\n        require(token.transfer(msg.sender, airdropAmount), \"Token transfer failed\");\n        emit AirdropClaimed(msg.sender, airdropAmount);\n    }\n\n    /// @notice Allows the owner to withdraw tokens from the contract.\n    /// @param amount The amount of tokens to withdraw (in the token's smallest unit).\n    function withdrawTokens(uint256 amount) external onlyOwner {\n        require(token.balanceOf(address(this)) >= amount, \"Not enough tokens\");\n        require(token.transfer(owner, amount), \"Token transfer failed\");\n    }\n}\n",
  "sourcePath": "/Users/yosgi/freelancer/DeFiForge/apps/contracts/contracts/Airdrop.sol",
  "ast": {
    "absolutePath": "project:/contracts/Airdrop.sol",
    "exportedSymbols": {
      "Airdrop": [
        8667
      ],
      "IERC20": [
        8520
      ]
    },
    "id": 8668,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8503,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:29"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 8520,
        "linearizedBaseContracts": [
          8520
        ],
        "name": "IERC20",
        "nameLocation": "68:6:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 8512,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "90:8:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8505,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "107:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 8512,
                  "src": "99:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "99:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8507,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "126:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 8512,
                  "src": "118:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "98:35:29"
            },
            "returnParameters": {
              "id": 8511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8510,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8512,
                  "src": "152:4:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8509,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "152:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "151:6:29"
            },
            "scope": 8520,
            "src": "81:77:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "70a08231",
            "id": 8519,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "172:9:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8514,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "190:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 8519,
                  "src": "182:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "182:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "181:17:29"
            },
            "returnParameters": {
              "id": 8518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8517,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8519,
                  "src": "222:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "221:9:29"
            },
            "scope": 8520,
            "src": "163:68:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8668,
        "src": "58:175:29",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Airdrop",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8521,
          "nodeType": "StructuredDocumentation",
          "src": "235:209:29",
          "text": "@title Airdrop Contract\n @notice This contract allows users to claim an airdrop of tokens. Each address can claim only once.\n @dev The contract must be pre-funded with enough tokens for the airdrop."
        },
        "fullyImplemented": true,
        "id": 8667,
        "linearizedBaseContracts": [
          8667
        ],
        "name": "Airdrop",
        "nameLocation": "453:7:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 8524,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "481:5:29",
            "nodeType": "VariableDeclaration",
            "scope": 8667,
            "src": "467:19:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$8520",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 8523,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8522,
                "name": "IERC20",
                "nameLocations": [
                  "467:6:29"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8520,
                "src": "467:6:29"
              },
              "referencedDeclaration": 8520,
              "src": "467:6:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8520",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc2ea8a5",
            "id": 8526,
            "mutability": "mutable",
            "name": "airdropAmount",
            "nameLocation": "568:13:29",
            "nodeType": "VariableDeclaration",
            "scope": 8667,
            "src": "553:28:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8525,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "553:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c884ef83",
            "id": 8530,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "696:7:29",
            "nodeType": "VariableDeclaration",
            "scope": 8667,
            "src": "664:39:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 8529,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 8527,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "672:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "664:24:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 8528,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "683:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 8532,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "787:5:29",
            "nodeType": "VariableDeclaration",
            "scope": 8667,
            "src": "772:20:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8531,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "772:7:29",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "650e45f04ef8a0c267b2f78d983913f69ae3a353b2b32de5429307522be0ab55",
            "id": 8538,
            "name": "AirdropClaimed",
            "nameLocation": "845:14:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8534,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimant",
                  "nameLocation": "876:8:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 8538,
                  "src": "860:24:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8536,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "894:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 8538,
                  "src": "886:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "859:42:29"
            },
            "src": "839:63:29"
          },
          {
            "body": {
              "id": 8550,
              "nodeType": "Block",
              "src": "995:69:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8542,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1013:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1017:6:29",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1013:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8544,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8532,
                          "src": "1027:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1013:19:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206f776e6572",
                        "id": 8546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1034:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
                          "typeString": "literal_string \"Not owner\""
                        },
                        "value": "Not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
                          "typeString": "literal_string \"Not owner\""
                        }
                      ],
                      "id": 8541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1005:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:41:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8548,
                  "nodeType": "ExpressionStatement",
                  "src": "1005:41:29"
                },
                {
                  "id": 8549,
                  "nodeType": "PlaceholderStatement",
                  "src": "1056:1:29"
                }
              ]
            },
            "documentation": {
              "id": 8539,
              "nodeType": "StructuredDocumentation",
              "src": "908:61:29",
              "text": "@notice Modifier to restrict functions to only the owner."
            },
            "id": 8551,
            "name": "onlyOwner",
            "nameLocation": "983:9:29",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "992:2:29"
            },
            "src": "974:90:29",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8584,
              "nodeType": "Block",
              "src": "1371:183:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8560,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8554,
                          "src": "1389:12:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1413:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1405:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8561,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1405:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1405:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1389:26:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e2061646472657373",
                        "id": 8566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1417:23:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
                          "typeString": "literal_string \"Invalid token address\""
                        },
                        "value": "Invalid token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
                          "typeString": "literal_string \"Invalid token address\""
                        }
                      ],
                      "id": 8559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1381:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1381:60:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8568,
                  "nodeType": "ExpressionStatement",
                  "src": "1381:60:29"
                },
                {
                  "expression": {
                    "id": 8573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8569,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8524,
                      "src": "1451:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8520",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8571,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8554,
                          "src": "1466:12:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8570,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8520,
                        "src": "1459:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$8520_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 8572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1459:20:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8520",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1451:28:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8520",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 8574,
                  "nodeType": "ExpressionStatement",
                  "src": "1451:28:29"
                },
                {
                  "expression": {
                    "id": 8577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8575,
                      "name": "airdropAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8526,
                      "src": "1489:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8576,
                      "name": "_airdropAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8556,
                      "src": "1505:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1489:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8578,
                  "nodeType": "ExpressionStatement",
                  "src": "1489:30:29"
                },
                {
                  "expression": {
                    "id": 8582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8579,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8532,
                      "src": "1529:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 8580,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1537:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 8581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1541:6:29",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1537:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1529:18:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8583,
                  "nodeType": "ExpressionStatement",
                  "src": "1529:18:29"
                }
              ]
            },
            "documentation": {
              "id": 8552,
              "nodeType": "StructuredDocumentation",
              "src": "1070:238:29",
              "text": "@notice Constructor sets the token address and airdrop amount.\n @param tokenAddress The address of the ERC20 token contract.\n @param _airdropAmount The amount of tokens each user can claim (in the token's smallest unit)."
            },
            "id": 8585,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8554,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1333:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 8585,
                  "src": "1325:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8556,
                  "mutability": "mutable",
                  "name": "_airdropAmount",
                  "nameLocation": "1355:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 8585,
                  "src": "1347:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1324:46:29"
            },
            "returnParameters": {
              "id": 8558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1371:0:29"
            },
            "scope": 8667,
            "src": "1313:241:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8634,
              "nodeType": "Block",
              "src": "1679:350:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1697:20:29",
                        "subExpression": {
                          "baseExpression": {
                            "id": 8590,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8530,
                            "src": "1698:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 8593,
                          "indexExpression": {
                            "expression": {
                              "id": 8591,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1706:3:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1710:6:29",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1706:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1698:19:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f7020616c726561647920636c61696d6564",
                        "id": 8595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1719:25:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7f836860b3581574517ce41ee0415fee825593a2d439bddd5b700e1bd865e9a",
                          "typeString": "literal_string \"Airdrop already claimed\""
                        },
                        "value": "Airdrop already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7f836860b3581574517ce41ee0415fee825593a2d439bddd5b700e1bd865e9a",
                          "typeString": "literal_string \"Airdrop already claimed\""
                        }
                      ],
                      "id": 8589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1689:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1689:56:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8597,
                  "nodeType": "ExpressionStatement",
                  "src": "1689:56:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8603,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1787:4:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Airdrop_$8667",
                                    "typeString": "contract Airdrop"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Airdrop_$8667",
                                    "typeString": "contract Airdrop"
                                  }
                                ],
                                "id": 8602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1779:7:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8601,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1779:7:29",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1779:13:29",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 8599,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8524,
                              "src": "1763:5:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8520",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1769:9:29",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8519,
                            "src": "1763:15:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 8605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1763:30:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8606,
                          "name": "airdropAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8526,
                          "src": "1797:13:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1763:47:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e20636f6e7472616374",
                        "id": 8608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1812:31:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431",
                          "typeString": "literal_string \"Not enough tokens in contract\""
                        },
                        "value": "Not enough tokens in contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431",
                          "typeString": "literal_string \"Not enough tokens in contract\""
                        }
                      ],
                      "id": 8598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1755:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1755:89:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8610,
                  "nodeType": "ExpressionStatement",
                  "src": "1755:89:29"
                },
                {
                  "expression": {
                    "id": 8616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8611,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8530,
                        "src": "1855:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 8614,
                      "indexExpression": {
                        "expression": {
                          "id": 8612,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1863:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1867:6:29",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1863:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1855:19:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 8615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1877:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1855:26:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8617,
                  "nodeType": "ExpressionStatement",
                  "src": "1855:26:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 8621,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1914:3:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1918:6:29",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1914:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8623,
                            "name": "airdropAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8526,
                            "src": "1926:13:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8619,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8524,
                            "src": "1899:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8520",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 8620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1905:8:29",
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8512,
                          "src": "1899:14:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1899:41:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207472616e73666572206661696c6564",
                        "id": 8625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1942:23:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        },
                        "value": "Token transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        }
                      ],
                      "id": 8618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1891:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:75:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8627,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:75:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8629,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1996:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2000:6:29",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1996:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8631,
                        "name": "airdropAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8526,
                        "src": "2008:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8628,
                      "name": "AirdropClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8538,
                      "src": "1981:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1981:41:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8633,
                  "nodeType": "EmitStatement",
                  "src": "1976:46:29"
                }
              ]
            },
            "documentation": {
              "id": 8586,
              "nodeType": "StructuredDocumentation",
              "src": "1560:81:29",
              "text": "@notice Allows a user to claim the airdrop. Each address can only claim once."
            },
            "functionSelector": "5b88349d",
            "id": 8635,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimAirdrop",
            "nameLocation": "1655:12:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1667:2:29"
            },
            "returnParameters": {
              "id": 8588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1679:0:29"
            },
            "scope": 8667,
            "src": "1646:383:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8665,
              "nodeType": "Block",
              "src": "2252:160:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8648,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2294:4:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Airdrop_$8667",
                                    "typeString": "contract Airdrop"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Airdrop_$8667",
                                    "typeString": "contract Airdrop"
                                  }
                                ],
                                "id": 8647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2286:7:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8646,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2286:7:29",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2286:13:29",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 8644,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8524,
                              "src": "2270:5:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8520",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2276:9:29",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8519,
                            "src": "2270:15:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 8650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2270:30:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8651,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8638,
                          "src": "2304:6:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2270:40:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e73",
                        "id": 8653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2312:19:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                          "typeString": "literal_string \"Not enough tokens\""
                        },
                        "value": "Not enough tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                          "typeString": "literal_string \"Not enough tokens\""
                        }
                      ],
                      "id": 8643,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2262:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2262:70:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8655,
                  "nodeType": "ExpressionStatement",
                  "src": "2262:70:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8659,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8532,
                            "src": "2365:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8660,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8638,
                            "src": "2372:6:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8657,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8524,
                            "src": "2350:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8520",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 8658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2356:8:29",
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8512,
                          "src": "2350:14:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2350:29:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207472616e73666572206661696c6564",
                        "id": 8662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2381:23:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        },
                        "value": "Token transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        }
                      ],
                      "id": 8656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2342:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2342:63:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8664,
                  "nodeType": "ExpressionStatement",
                  "src": "2342:63:29"
                }
              ]
            },
            "documentation": {
              "id": 8636,
              "nodeType": "StructuredDocumentation",
              "src": "2035:153:29",
              "text": "@notice Allows the owner to withdraw tokens from the contract.\n @param amount The amount of tokens to withdraw (in the token's smallest unit)."
            },
            "functionSelector": "315a095d",
            "id": 8666,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8641,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8640,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2242:9:29"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8551,
                  "src": "2242:9:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "2242:9:29"
              }
            ],
            "name": "withdrawTokens",
            "nameLocation": "2202:14:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8638,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2225:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 8666,
                  "src": "2217:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2216:16:29"
            },
            "returnParameters": {
              "id": 8642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2252:0:29"
            },
            "scope": 8667,
            "src": "2193:219:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8668,
        "src": "444:1970:29",
        "usedErrors": [],
        "usedEvents": [
          8538
        ]
      }
    ],
    "src": "32:2383:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xC1282051B146a5D0d3335Af7777A53407B35BEaA",
      "transactionHash": "0x35ba16d6e174da8e0c91920077608442b428b5de5dbaa18cc844fcbe8a524325"
    },
    "420120000": {
      "events": {},
      "links": {},
      "address": "0x34D8544EEfC6867c151e4A24b4278964eA8a0738",
      "transactionHash": "0x84060f12f53f93dfd8847d88ad35be56a76038ff37abc197f91be3eb9d8bed0b"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-02-23T06:27:44.105Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "The contract must be pre-funded with enough tokens for the airdrop.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_airdropAmount": "The amount of tokens each user can claim (in the token's smallest unit).",
          "tokenAddress": "The address of the ERC20 token contract."
        }
      },
      "withdrawTokens(uint256)": {
        "params": {
          "amount": "The amount of tokens to withdraw (in the token's smallest unit)."
        }
      }
    },
    "title": "Airdrop Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claimAirdrop()": {
        "notice": "Allows a user to claim the airdrop. Each address can only claim once."
      },
      "constructor": {
        "notice": "Constructor sets the token address and airdrop amount."
      },
      "withdrawTokens(uint256)": {
        "notice": "Allows the owner to withdraw tokens from the contract."
      }
    },
    "notice": "This contract allows users to claim an airdrop of tokens. Each address can claim only once.",
    "version": 1
  }
}