import{a as t}from"./chunk-4YP32ZNP.js";import"./chunk-ZFTFDHK4.js";import{a as r}from"./chunk-74GQJJ7R.js";import"./chunk-NNHN6WUY.js";import"./chunk-T7ERZ2CJ.js";import"./chunk-GSNDLQ4C.js";import"./chunk-BKSIEBAA.js";import"./chunk-YWRPWWKI.js";import"./chunk-VTVHUB7E.js";import{a as e}from"./chunk-JMSSU44E.js";import"./chunk-4UYSGV57.js";import"./chunk-ANLJ4KBN.js";import"./chunk-ID6SFQTL.js";import{a as i}from"./chunk-VLPNAR64.js";import{b as o}from"./chunk-GE5NEIZC.js";import{e as a}from"./chunk-35CVRQTC.js";function n(r){let o=i(r.radius,1),a={radii:new e(o,o,o),stackPartitions:r.stackPartitions,slicePartitions:r.slicePartitions,vertexFormat:r.vertexFormat};this._ellipsoidGeometry=new t(a),this._workerName="createSphereGeometry"}n.packedLength=t.packedLength,n.pack=function(r,e,i){return o.typeOf.object("value",r),t.pack(r._ellipsoidGeometry,e,i)};var s=new t,c={radius:void 0,radii:new e,vertexFormat:new r,stackPartitions:void 0,slicePartitions:void 0};n.unpack=function(i,o,m){let u=t.unpack(i,o,s);return c.vertexFormat=r.clone(u._vertexFormat,c.vertexFormat),c.stackPartitions=u._stackPartitions,c.slicePartitions=u._slicePartitions,a(m)?(e.clone(u._radii,c.radii),m._ellipsoidGeometry=new t(c),m):(c.radius=u._radii.x,new n(c))},n.createGeometry=function(r){return t.createGeometry(r._ellipsoidGeometry)};var m=function(t,r){return a(r)&&(t=n.unpack(t,r)),n.createGeometry(t)};export{m as default};