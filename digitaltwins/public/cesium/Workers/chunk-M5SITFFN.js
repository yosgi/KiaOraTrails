import{a as e}from"./chunk-ZPYKVVFF.js";import{a as t}from"./chunk-EEKB62LQ.js";import{b as r}from"./chunk-V3DSE3OK.js";import{a as a}from"./chunk-FMRIJYNG.js";import{b as n}from"./chunk-YWRPWWKI.js";import{a as i,b as o,d as c}from"./chunk-JMSSU44E.js";import{a as l}from"./chunk-4UYSGV57.js";import{a as s}from"./chunk-VLPNAR64.js";import{a as u}from"./chunk-GE5NEIZC.js";import{e as h}from"./chunk-35CVRQTC.js";var f={};f.numberOfPoints=function(e,t,r){return Math.ceil(i.distance(e,t)/r)},f.numberOfPointsRhumbLine=function(e,t,r){return Math.max(1,Math.ceil(Math.sqrt((Math.pow(e.longitude-t.longitude,2)+Math.pow(e.latitude-t.latitude,2))/(r*r))))};var p=new o;f.extractHeights=function(e,t){let r=e.length,a=Array(r);for(let n=0;n<r;n++){let r=e[n];a[n]=t.cartesianToCartographic(r,p).height}return a};var g=new n,m=new i,d=new i,w=new a(i.UNIT_X,0),T=new i,y=new a(i.UNIT_X,0),A=new i,P=new i,C=[];function k(e,t,r){let a;if(C.length=e,t===r){for(a=0;a<e;a++)C[a]=t;return C}let n=(r-t)/e;for(a=0;a<e;a++){let e=t+a*n;C[a]=e}return C}var E=new o,R=new o,S=new i,b=new i,D=new i,N=new e,I=new t;f.wrapLongitude=function(e,t){let o=[],c=[];if(h(e)&&e.length>0){t=s(t,n.IDENTITY);let l=n.inverseTransformation(t,g),u=n.multiplyByPoint(l,i.ZERO,m),f=i.normalize(n.multiplyByPointAsVector(l,i.UNIT_Y,d),d),p=a.fromPointNormal(u,f,w),C=i.normalize(n.multiplyByPointAsVector(l,i.UNIT_X,T),T),k=a.fromPointNormal(u,C,y),E=1;o.push(i.clone(e[0]));let R=o[0],S=e.length;for(let t=1;t<S;++t){let n=e[t];if(0>a.getPointDistance(k,R)||0>a.getPointDistance(k,n)){let e=r.lineSegmentPlane(R,n,p,A);if(h(e)){let t=i.multiplyByScalar(f,5e-9,P);0>a.getPointDistance(p,R)&&i.negate(t,t),o.push(i.add(e,t,new i)),c.push(E+1),i.negate(t,t),o.push(i.add(e,t,new i)),E=1}}o.push(i.clone(e[t])),E++,R=n}c.push(E)}return{positions:o,lengths:c}},f.generateArc=function(e){h(e)||(e={});let t=e.positions;if(!h(t))throw new u("options.positions is required.");let r=t.length,a=s(e.ellipsoid,c.default),n=s(e.height,0),o=Array.isArray(n);if(r<1)return[];if(1===r){let e=a.scaleToGeodeticSurface(t[0],b);if(0!==(n=o?n[0]:n)){let t=a.geodeticSurfaceNormal(e,S);i.multiplyByScalar(t,n,t),i.add(e,t,e)}return[e.x,e.y,e.z]}let p=e.minDistance;if(!h(p)){let t=s(e.granularity,l.RADIANS_PER_DEGREE);p=l.chordLength(t,a.maximumRadius)}let g=0,m;for(m=0;m<r-1;m++)g+=f.numberOfPoints(t[m],t[m+1],p);let d=(g+1)*3,w=Array(d),T=0;for(m=0;m<r-1;m++)T=function(e,t,r,a,n,o,c,l){let s=a.scaleToGeodeticSurface(e,b),u=a.scaleToGeodeticSurface(t,D),h=f.numberOfPoints(e,t,r),p=a.cartesianToCartographic(s,E),g=a.cartesianToCartographic(u,R),m=k(h,n,o);N.setEndPoints(p,g);let d=N.surfaceDistance/h,w=l;p.height=n;let T=a.cartographicToCartesian(p,S);i.pack(T,c,w),w+=3;for(let e=1;e<h;e++){let t=N.interpolateUsingSurfaceDistance(e*d,R);t.height=m[e],T=a.cartographicToCartesian(t,S),i.pack(T,c,w),w+=3}return w}(t[m],t[m+1],p,a,o?n[m]:n,o?n[m+1]:n,w,T);C.length=0;let y=t[r-1],A=a.cartesianToCartographic(y,E);A.height=o?n[r-1]:n;let P=a.cartographicToCartesian(A,S);return i.pack(P,w,d-3),w};var j=new o,v=new o;f.generateRhumbArc=function(e){h(e)||(e={});let r=e.positions;if(!h(r))throw new u("options.positions is required.");let a=r.length,n=s(e.ellipsoid,c.default),p=s(e.height,0),g=Array.isArray(p);if(a<1)return[];if(1===a){let e=n.scaleToGeodeticSurface(r[0],b);if(0!==(p=g?p[0]:p)){let t=n.geodeticSurfaceNormal(e,S);i.multiplyByScalar(t,p,t),i.add(e,t,e)}return[e.x,e.y,e.z]}let m=s(e.granularity,l.RADIANS_PER_DEGREE),d=0,w,T=n.cartesianToCartographic(r[0],j),y;for(w=0;w<a-1;w++)y=n.cartesianToCartographic(r[w+1],v),d+=f.numberOfPointsRhumbLine(T,y,m),T=o.clone(y,j);let A=(d+1)*3,P=Array(A),D=0;for(w=0;w<a-1;w++)D=function(e,r,a,n,o,c,l,s){let u=n.cartesianToCartographic(e,E),h=n.cartesianToCartographic(r,R),p=f.numberOfPointsRhumbLine(u,h,a);u.height=0,h.height=0;let g=k(p,o,c);I.ellipsoid.equals(n)||(I=new t(void 0,void 0,n)),I.setEndPoints(u,h);let m=I.surfaceDistance/p,d=s;u.height=o;let w=n.cartographicToCartesian(u,S);i.pack(w,l,d),d+=3;for(let e=1;e<p;e++){let t=I.interpolateUsingSurfaceDistance(e*m,R);t.height=g[e],w=n.cartographicToCartesian(t,S),i.pack(w,l,d),d+=3}return d}(r[w],r[w+1],m,n,g?p[w]:p,g?p[w+1]:p,P,D);C.length=0;let N=r[a-1],G=n.cartesianToCartographic(N,E);G.height=g?p[a-1]:p;let M=n.cartographicToCartesian(G,S);return i.pack(M,P,A-3),P},f.generateCartesianArc=function(e){let t=f.generateArc(e),r=t.length/3,a=Array(r);for(let e=0;e<r;e++)a[e]=i.unpack(t,3*e);return a},f.generateCartesianRhumbArc=function(e){let t=f.generateRhumbArc(e),r=t.length/3,a=Array(r);for(let e=0;e<r;e++)a[e]=i.unpack(t,3*e);return a};var G=f;export{G as a};