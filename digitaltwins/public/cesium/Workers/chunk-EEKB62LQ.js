import{a as t,b as i,d as e}from"./chunk-JMSSU44E.js";import{a as n}from"./chunk-4UYSGV57.js";import{a as a}from"./chunk-VLPNAR64.js";import{a as s,b as h}from"./chunk-GE5NEIZC.js";import{e as l}from"./chunk-35CVRQTC.js";function d(t,i,e){if(0===t)return i*e;let n=t*t,a=n*n,s=a*n,h=s*n,l=h*n,d=l*n,o=Math.sin(2*e),u=Math.sin(4*e),r=Math.sin(6*e),c=Math.sin(8*e),_=Math.sin(10*e),g=Math.sin(12*e);return i*((1-n/4-3*a/64-5*s/256-175*h/16384-441*l/65536-4851*d/1048576)*e-(3*n/8+3*a/32+45*s/1024+105*h/4096+2205*l/131072+6237*d/524288)*o+(15*a/256+45*s/1024+525*h/16384+1575*l/65536+155925*d/8388608)*u-(35*s/3072+175*h/12288+3675*l/262144+13475*d/1048576)*r+(315*h/131072+2205*l/524288+43659*d/8388608)*c-(693*l/1310720+6237*d/5242880)*_+1001*d/8388608*g)}function o(t,i){if(0===t)return Math.log(Math.tan(.5*(n.PI_OVER_TWO+i)));let e=t*Math.sin(i);return Math.log(Math.tan(.5*(n.PI_OVER_TWO+i)))-t/2*Math.log((1+e)/(1-e))}var u=new t,r=new t;function c(e,a,s,l){var c,_,g,M;let f,p,m=t.normalize(l.cartographicToCartesian(a,r),u),P=t.normalize(l.cartographicToCartesian(s,r),r);h.typeOf.number.greaterThanOrEquals("value",Math.abs(Math.abs(t.angleBetween(m,P))-Math.PI),.0125);let O=l.maximumRadius,E=l.minimumRadius,I=O*O;e._ellipticitySquared=(I-E*E)/I,e._ellipticity=Math.sqrt(e._ellipticitySquared),e._start=i.clone(a,e._start),e._start.height=0,e._end=i.clone(s,e._end),e._end.height=0,c=a.longitude,_=a.latitude,g=s.longitude,M=s.latitude,f=o(e._ellipticity,_),p=o(e._ellipticity,M),e._heading=Math.atan2(n.negativePiToPi(g-c),p-f),e._distance=function(t,i,e,a,s,h,l){let o=t._heading,u=h-a,r=0;if(n.equalsEpsilon(Math.abs(o),n.PI_OVER_TWO,n.EPSILON8)){if(i===e)r=i*Math.cos(s)*n.negativePiToPi(u);else{let e=Math.sin(s);r=i*Math.cos(s)*n.negativePiToPi(u)/Math.sqrt(1-t._ellipticitySquared*e*e)}}else{let e=d(t._ellipticity,i,s);r=(d(t._ellipticity,i,l)-e)/Math.cos(o)}return Math.abs(r)}(e,l.maximumRadius,l.minimumRadius,a.longitude,a.latitude,s.longitude,s.latitude)}function _(t,e,a,s,h,u){if(0===a)return i.clone(t,u);let r=h*h,c,_,g;if(Math.abs(n.PI_OVER_TWO-Math.abs(e))>n.EPSILON8){if(_=function(t,i,e){let n=t/e;if(0===i)return n;let a=n*n,s=a*n,h=s*n,l=i*i,d=l*l,o=d*l,u=o*l,r=u*l,c=r*l,_=Math.sin(2*n),g=Math.cos(2*n),M=Math.sin(4*n),f=Math.cos(4*n),p=Math.sin(6*n),m=Math.cos(6*n),P=Math.sin(8*n),O=Math.cos(8*n),E=Math.sin(10*n),I=Math.cos(10*n),T=Math.sin(12*n);return n+n*l/4+7*n*d/64+15*n*o/256+579*n*u/16384+1515*n*r/65536+16837*n*c/1048576+(3*n*d/16+45*n*o/256-n*(32*a-561)*u/4096-n*(232*a-1677)*r/16384+n*(399985-90560*a+512*h)*c/5242880)*g+(21*n*o/256+483*n*u/4096-n*(224*a-1969)*r/16384-n*(33152*a-112599)*c/1048576)*f+(151*n*u/4096+4681*n*r/65536+1479*n*c/16384-453*s*c/32768)*m+(1097*n*r/65536+42783*n*c/1048576)*O+8011*n*c/1048576*I+(3*l/8+3*d/16+213*o/2048-3*a*o/64+255*u/4096-33*a*u/512+20861*r/524288-33*a*r/512+h*r/1024+28273*c/1048576-471*a*c/8192+9*h*c/4096)*_+(21*d/256+21*o/256+533*u/8192-21*a*u/512+197*r/4096-315*a*r/4096+584039*c/0x1000000-12517*a*c/131072+7*h*c/2048)*M+(151*o/6144+151*u/4096+5019*r/131072-453*a*r/16384+26965*c/786432-8607*a*c/131072)*p+(1097*u/131072+1097*r/65536+225797*c/0xa00000-1097*a*c/65536)*P+(8011*r/2621440+8011*c/1048576)*E+293393*c/0xf000000*T}(d(h,s,t.latitude)+a*Math.cos(e),h,s),Math.abs(e)<n.EPSILON10)c=n.negativePiToPi(t.longitude);else{let i=o(h,t.latitude);g=Math.tan(e)*(o(h,_)-i),c=n.negativePiToPi(t.longitude+g)}}else{let i;if(_=t.latitude,0===h)i=s*Math.cos(t.latitude);else{let e=Math.sin(t.latitude);i=s*Math.cos(t.latitude)/Math.sqrt(1-r*e*e)}g=a/i,c=e>0?n.negativePiToPi(t.longitude+g):n.negativePiToPi(t.longitude-g)}return l(u)?(u.longitude=c,u.latitude=_,u.height=0,u):new i(c,_,0)}function g(t,n,s){let h=a(s,e.default);this._ellipsoid=h,this._start=new i,this._end=new i,this._heading=void 0,this._distance=void 0,this._ellipticity=void 0,this._ellipticitySquared=void 0,l(t)&&l(n)&&c(this,t,n,h)}Object.defineProperties(g.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},surfaceDistance:{get:function(){return h.defined("distance",this._distance),this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},heading:{get:function(){return h.defined("distance",this._distance),this._heading}}}),g.fromStartHeadingDistance=function(t,i,s,d,o){h.defined("start",t),h.defined("heading",i),h.defined("distance",s),h.typeOf.number.greaterThan("distance",s,0);let u=a(d,e.default),r=u.maximumRadius,c=u.minimumRadius,M=r*r,f=Math.sqrt((M-c*c)/M),p=_(t,i=n.negativePiToPi(i),s,u.maximumRadius,f);return!l(o)||l(d)&&!d.equals(o.ellipsoid)?new g(t,p,u):(o.setEndPoints(t,p),o)},g.prototype.setEndPoints=function(t,i){h.defined("start",t),h.defined("end",i),c(this,t,i,this._ellipsoid)},g.prototype.interpolateUsingFraction=function(t,i){return this.interpolateUsingSurfaceDistance(t*this._distance,i)},g.prototype.interpolateUsingSurfaceDistance=function(t,i){if(h.typeOf.number("distance",t),!l(this._distance)||0===this._distance)throw new s("EllipsoidRhumbLine must have distinct start and end set.");return _(this._start,this._heading,t,this._ellipsoid.maximumRadius,this._ellipticity,i)},g.prototype.findIntersectionWithLongitude=function(t,e){if(h.typeOf.number("intersectionLongitude",t),!l(this._distance)||0===this._distance)throw new s("EllipsoidRhumbLine must have distinct start and end set.");let a=this._ellipticity,d=this._heading,o=Math.abs(d),u=this._start;if(t=n.negativePiToPi(t),n.equalsEpsilon(Math.abs(t),Math.PI,n.EPSILON14)&&(t=n.sign(u.longitude)*Math.PI),l(e)||(e=new i),Math.abs(n.PI_OVER_TWO-o)<=n.EPSILON8)return e.longitude=t,e.latitude=u.latitude,e.height=0,e;if(n.equalsEpsilon(Math.abs(n.PI_OVER_TWO-o),n.PI_OVER_TWO,n.EPSILON8))return n.equalsEpsilon(t,u.longitude,n.EPSILON12)?void 0:(e.longitude=t,e.latitude=n.PI_OVER_TWO*n.sign(n.PI_OVER_TWO-d),e.height=0,e);let r=u.latitude,c=a*Math.sin(r),_=Math.tan(.5*(n.PI_OVER_TWO+r))*Math.exp((t-u.longitude)/Math.tan(d)),g=(1+c)/(1-c),M=u.latitude,f;do{let t=a*Math.sin(f=M);M=2*Math.atan(_*Math.pow((1+t)/(1-t)/g,a/2))-n.PI_OVER_TWO}while(!n.equalsEpsilon(M,f,n.EPSILON12));return e.longitude=t,e.latitude=M,e.height=0,e},g.prototype.findIntersectionWithLatitude=function(t,e){if(h.typeOf.number("intersectionLatitude",t),!l(this._distance)||0===this._distance)throw new s("EllipsoidRhumbLine must have distinct start and end set.");let a=this._ellipticity,d=this._heading,u=this._start;if(n.equalsEpsilon(Math.abs(d),n.PI_OVER_TWO,n.EPSILON8))return;let r=o(a,u.latitude),c=Math.tan(d)*(o(a,t)-r),_=n.negativePiToPi(u.longitude+c);return l(e)?(e.longitude=_,e.latitude=t,e.height=0,e):new i(_,t,0)};var M=g;export{M as a};