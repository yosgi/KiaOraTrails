import{a as t}from"./chunk-IIL7G2BA.js";import{a as e}from"./chunk-ZFTFDHK4.js";import{b as i}from"./chunk-CKMJZ5B3.js";import"./chunk-EEKB62LQ.js";import{a as r}from"./chunk-NNHN6WUY.js";import{a as o}from"./chunk-T7ERZ2CJ.js";import{b as n,c as a,d as s}from"./chunk-GSNDLQ4C.js";import{d as l}from"./chunk-BKSIEBAA.js";import{h as u}from"./chunk-YWRPWWKI.js";import{a as c}from"./chunk-VTVHUB7E.js";import{a as h,b as p,d as f}from"./chunk-JMSSU44E.js";import{a as d}from"./chunk-4UYSGV57.js";import"./chunk-ANLJ4KBN.js";import"./chunk-ID6SFQTL.js";import{a as g}from"./chunk-VLPNAR64.js";import{a as m}from"./chunk-GE5NEIZC.js";import{e as _}from"./chunk-35CVRQTC.js";var b=new l,k=new l,E=new h,w=new u;function y(e,i){let l=e._ellipsoid,u=i.height,h=i.width,p=i.northCap,f=i.southCap,d=u,g=2,m=0,_=4;p&&(g-=1,d-=1,m+=1,_-=2),f&&(g-=1,d-=1,m+=1,_-=2);let b=new Float64Array(3*(m+=g*h+2*d-_)),k=0,w=0,y;if(p)t.computePosition(i,l,!1,w,0,E),b[k++]=E.x,b[k++]=E.y,b[k++]=E.z;else for(y=0;y<h;y++)t.computePosition(i,l,!1,w,y,E),b[k++]=E.x,b[k++]=E.y,b[k++]=E.z;for(y=h-1,w=1;w<u;w++)t.computePosition(i,l,!1,w,y,E),b[k++]=E.x,b[k++]=E.y,b[k++]=E.z;if(w=u-1,!f)for(y=h-2;y>=0;y--)t.computePosition(i,l,!1,w,y,E),b[k++]=E.x,b[k++]=E.y,b[k++]=E.z;for(y=0,w=u-2;w>0;w--)t.computePosition(i,l,!1,w,y,E),b[k++]=E.x,b[k++]=E.y,b[k++]=E.z;let A=b.length/3*2,v=r.createTypedArray(b.length/3,A),N=0;for(let t=0;t<b.length/3-1;t++)v[N++]=t,v[N++]=t+1;v[N++]=b.length/3-1,v[N++]=0;let H=new a({attributes:new o,primitiveType:n.LINES});return H.attributes.position=new s({componentDatatype:c.DOUBLE,componentsPerAttribute:3,values:b}),H.indices=v,H}function A(t){let e=(t=g(t,g.EMPTY_OBJECT)).rectangle,i=g(t.granularity,d.RADIANS_PER_DEGREE),r=g(t.ellipsoid,f.default),o=g(t.rotation,0);if(!_(e))throw new m("rectangle is required.");if(u._validate(e),e.north<e.south)throw new m("options.rectangle.north must be greater than options.rectangle.south");let n=g(t.height,0),a=g(t.extrudedHeight,n);this._rectangle=u.clone(e),this._granularity=i,this._ellipsoid=r,this._surfaceHeight=Math.max(n,a),this._rotation=o,this._extrudedHeight=Math.min(n,a),this._offsetAttribute=t.offsetAttribute,this._workerName="createRectangleOutlineGeometry"}A.packedLength=u.packedLength+f.packedLength+5,A.pack=function(t,e,i){if(!_(t))throw new m("value is required");if(!_(e))throw new m("array is required");return i=g(i,0),u.pack(t._rectangle,e,i),i+=u.packedLength,f.pack(t._ellipsoid,e,i),i+=f.packedLength,e[i++]=t._granularity,e[i++]=t._surfaceHeight,e[i++]=t._rotation,e[i++]=t._extrudedHeight,e[i]=g(t._offsetAttribute,-1),e};var v=new u,N=f.clone(f.UNIT_SPHERE),H={rectangle:v,ellipsoid:N,granularity:void 0,height:void 0,rotation:void 0,extrudedHeight:void 0,offsetAttribute:void 0};A.unpack=function(t,e,i){if(!_(t))throw new m("array is required");e=g(e,0);let r=u.unpack(t,e,v);e+=u.packedLength;let o=f.unpack(t,e,N);e+=f.packedLength;let n=t[e++],a=t[e++],s=t[e++],l=t[e++],c=t[e];return _(i)?(i._rectangle=u.clone(r,i._rectangle),i._ellipsoid=f.clone(o,i._ellipsoid),i._surfaceHeight=a,i._rotation=s,i._extrudedHeight=l,i._offsetAttribute=-1===c?void 0:c,i):(H.granularity=n,H.height=a,H.rotation=s,H.extrudedHeight=l,H.offsetAttribute=-1===c?void 0:c,new A(H))};var L=new p;A.createGeometry=function(o){let u=o._rectangle,h=o._ellipsoid,p=t.computeOptions(u,o._granularity,o._rotation,0,w,L),f,g;if(d.equalsEpsilon(u.north,u.south,d.EPSILON10)||d.equalsEpsilon(u.east,u.west,d.EPSILON10))return;let m=o._surfaceHeight,E=o._extrudedHeight,A;if(d.equalsEpsilon(m,E,0,d.EPSILON2)){if((f=y(o,p)).attributes.position.values=i.scaleToGeodeticHeight(f.attributes.position.values,m,h,!1),_(o._offsetAttribute)){let t=f.attributes.position.values.length;A=+(o._offsetAttribute!==e.NONE);let i=new Uint8Array(t/3).fill(A);f.attributes.applyOffset=new s({componentDatatype:c.UNSIGNED_BYTE,componentsPerAttribute:1,values:i})}g=l.fromRectangle3D(u,h,m)}else{if(f=function(t,e){let o,n=t._surfaceHeight,a=t._extrudedHeight,s=t._ellipsoid,l=y(t,e),u=e.height,c=e.width,h=i.scaleToGeodeticHeight(l.attributes.position.values,n,s,!1),p=h.length,f=new Float64Array(2*p);f.set(h);let d=i.scaleToGeodeticHeight(l.attributes.position.values,a,s);f.set(d,p),l.attributes.position.values=f;let g=e.northCap,m=e.southCap,_=4;g&&(_-=1),m&&(_-=1);let b=(f.length/3+_)*2,k=r.createTypedArray(f.length/3,b);p=f.length/6;let E=0;for(let t=0;t<p-1;t++)k[E++]=t,k[E++]=t+1,k[E++]=t+p,k[E++]=t+p+1;if(k[E++]=p-1,k[E++]=0,k[E++]=p+p-1,k[E++]=p,k[E++]=0,k[E++]=p,g)o=u-1;else{let t=c-1;k[E++]=t,k[E++]=t+p,o=c+u-2}if(k[E++]=o,k[E++]=o+p,!m){let t=c+o-1;k[E++]=t,k[E]=t+p}return l.indices=k,l}(o,p),_(o._offsetAttribute)){let t=f.attributes.position.values.length/3,i=new Uint8Array(t);o._offsetAttribute===e.TOP?i=i.fill(1,0,t/2):(A=+(o._offsetAttribute!==e.NONE),i=i.fill(A)),f.attributes.applyOffset=new s({componentDatatype:c.UNSIGNED_BYTE,componentsPerAttribute:1,values:i})}let t=l.fromRectangle3D(u,h,m,k),n=l.fromRectangle3D(u,h,E,b);g=l.union(t,n)}return new a({attributes:f.attributes,indices:f.indices,primitiveType:n.LINES,boundingSphere:g,offsetAttribute:o._offsetAttribute})};var T=function(t,e){return _(e)&&(t=A.unpack(t,e)),t._ellipsoid=f.clone(t._ellipsoid),t._rectangle=u.clone(t._rectangle),A.createGeometry(t)};export{T as default};