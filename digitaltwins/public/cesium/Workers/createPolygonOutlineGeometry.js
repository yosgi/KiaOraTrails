import{a as e}from"./chunk-D4TZ3IL5.js";import{a as t}from"./chunk-GHQSI7F2.js";import{a as i}from"./chunk-KM43AUZL.js";import{a as r}from"./chunk-AOALMXNW.js";import"./chunk-CXNPIJLB.js";import"./chunk-APUOR5ZJ.js";import{a as o}from"./chunk-ZFTFDHK4.js";import{a as n}from"./chunk-FNJKWSPR.js";import"./chunk-KSZ5EBRB.js";import{a as s,b as a}from"./chunk-CKMJZ5B3.js";import"./chunk-WNTCOVG2.js";import"./chunk-EEKB62LQ.js";import"./chunk-V3DSE3OK.js";import"./chunk-FMRIJYNG.js";import{a as p}from"./chunk-NNHN6WUY.js";import{a as u}from"./chunk-T7ERZ2CJ.js";import{b as l,c as h,d as c}from"./chunk-GSNDLQ4C.js";import{d as f}from"./chunk-BKSIEBAA.js";import"./chunk-YWRPWWKI.js";import{a as d}from"./chunk-VTVHUB7E.js";import{a as y,d as m}from"./chunk-JMSSU44E.js";import{a as g}from"./chunk-4UYSGV57.js";import"./chunk-ANLJ4KBN.js";import"./chunk-ID6SFQTL.js";import{a as E}from"./chunk-VLPNAR64.js";import{a as _,b as b}from"./chunk-GE5NEIZC.js";import{e as H}from"./chunk-35CVRQTC.js";var k=[],A=[];function P(i){if(b.typeOf.object("options",i),b.typeOf.object("options.polygonHierarchy",i.polygonHierarchy),i.perPositionHeight&&H(i.height))throw new _("Cannot use both options.perPositionHeight and options.height");if(H(i.arcType)&&i.arcType!==t.GEODESIC&&i.arcType!==t.RHUMB)throw new _("Invalid arcType. Valid options are ArcType.GEODESIC and ArcType.RHUMB.");let r=i.polygonHierarchy,o=E(i.ellipsoid,m.default),n=E(i.granularity,g.RADIANS_PER_DEGREE),s=E(i.perPositionHeight,!1),a=s&&H(i.extrudedHeight),p=E(i.arcType,t.GEODESIC),u=E(i.height,0),l=E(i.extrudedHeight,u);if(!a){let e=Math.max(u,l);l=Math.min(u,l),u=e}this._ellipsoid=m.clone(o),this._granularity=n,this._height=u,this._extrudedHeight=l,this._arcType=p,this._polygonHierarchy=r,this._perPositionHeight=s,this._perPositionHeightExtrude=a,this._offsetAttribute=i.offsetAttribute,this._workerName="createPolygonOutlineGeometry",this.packedLength=e.computeHierarchyPackedLength(r,y)+m.packedLength+8}P.pack=function(t,i,r){return b.typeOf.object("value",t),b.defined("array",i),r=E(r,0),r=e.packPolygonHierarchy(t._polygonHierarchy,i,r,y),m.pack(t._ellipsoid,i,r),r+=m.packedLength,i[r++]=t._height,i[r++]=t._extrudedHeight,i[r++]=t._granularity,i[r++]=+!!t._perPositionHeightExtrude,i[r++]=+!!t._perPositionHeight,i[r++]=t._arcType,i[r++]=E(t._offsetAttribute,-1),i[r]=t.packedLength,i};var T=m.clone(m.UNIT_SPHERE),j={polygonHierarchy:{}};P.unpack=function(t,i,r){b.defined("array",t),i=E(i,0);let o=e.unpackPolygonHierarchy(t,i,y);i=o.startingIndex,delete o.startingIndex;let n=m.unpack(t,i,T);i+=m.packedLength;let s=t[i++],a=t[i++],p=t[i++],u=1===t[i++],l=1===t[i++],h=t[i++],c=t[i++],f=t[i];return H(r)||(r=new P(j)),r._polygonHierarchy=o,r._ellipsoid=m.clone(n,r._ellipsoid),r._height=s,r._extrudedHeight=a,r._granularity=p,r._perPositionHeight=l,r._perPositionHeightExtrude=u,r._arcType=h,r._offsetAttribute=-1===c?void 0:c,r.packedLength=f,r},P.fromPositions=function(e){return e=E(e,E.EMPTY_OBJECT),b.defined("options.positions",e.positions),new P({polygonHierarchy:{positions:e.positions},height:e.height,extrudedHeight:e.extrudedHeight,ellipsoid:e.ellipsoid,granularity:e.granularity,perPositionHeight:e.perPositionHeight,arcType:e.arcType,offsetAttribute:e.offsetAttribute})},P.createGeometry=function(y){let m=y._ellipsoid,E=y._granularity,_=y._polygonHierarchy,b=y._perPositionHeight,P=y._arcType,T=e.polygonOutlinesFromHierarchy(_,!b,m);if(0===T.length)return;let j,L=[],O=g.chordLength(E,m.maximumRadius),v=y._height,I=y._extrudedHeight,N,S;if(y._perPositionHeightExtrude||!g.equalsEpsilon(v,I,0,g.EPSILON2))for(S=0;S<T.length;S++){if((j=function(r,o,f,y,m){let g=n.fromPoints(o,r).projectPointsOntoPlane(o,k);a.computeWindingOrder2D(g)===s.CLOCKWISE&&(g.reverse(),o=o.slice().reverse());let E,_,b=o.length,H=Array(b),P=0;if(y)for(E=new Float64Array(12*b),_=0;_<b;++_){H[_]=P/3;let e=o[_],t=o[(_+1)%b];E[P++]=e.x,E[P++]=e.y,E[P++]=e.z,E[P++]=t.x,E[P++]=t.y,E[P++]=t.z}else{let i=0;if(m===t.GEODESIC)for(_=0;_<b;_++)i+=e.subdivideLineCount(o[_],o[(_+1)%b],f);else if(m===t.RHUMB)for(_=0;_<b;_++)i+=e.subdivideRhumbLineCount(r,o[_],o[(_+1)%b],f);for(E=new Float64Array(6*i),_=0;_<b;++_){let i;H[_]=P/3,m===t.GEODESIC?i=e.subdivideLine(o[_],o[(_+1)%b],f,A):m===t.RHUMB&&(i=e.subdivideRhumbLine(r,o[_],o[(_+1)%b],f,A));let n=i.length;for(let e=0;e<n;++e)E[P++]=i[e]}}b=E.length/6;let T=H.length,j=(2*b+T)*2,L=p.createTypedArray(b+T,j);for(P=0,_=0;_<b;++_)L[P++]=_,L[P++]=(_+1)%b,L[P++]=_+b,L[P++]=(_+1)%b+b;for(_=0;_<T;_++){let e=H[_];L[P++]=e,L[P++]=e+b}return new i({geometry:new h({attributes:new u({position:new c({componentDatatype:d.DOUBLE,componentsPerAttribute:3,values:E})}),indices:L,primitiveType:l.LINES})})}(m,T[S],O,b,P)).geometry=e.scaleToGeodeticHeightExtruded(j.geometry,v,I,m,b),H(y._offsetAttribute)){let e=j.geometry.attributes.position.values.length/3,t=new Uint8Array(e);y._offsetAttribute===o.TOP?t=t.fill(1,0,e/2):(N=+(y._offsetAttribute!==o.NONE),t=t.fill(N)),j.geometry.attributes.applyOffset=new c({componentDatatype:d.UNSIGNED_BYTE,componentsPerAttribute:1,values:t})}L.push(j)}else for(S=0;S<T.length;S++){if((j=function(r,o,f,y,m){let g=n.fromPoints(o,r).projectPointsOntoPlane(o,k);a.computeWindingOrder2D(g)===s.CLOCKWISE&&(g.reverse(),o=o.slice().reverse());let E,_,b=o.length,H=0;if(y)for(E=new Float64Array(6*b),_=0;_<b;_++){let e=o[_],t=o[(_+1)%b];E[H++]=e.x,E[H++]=e.y,E[H++]=e.z,E[H++]=t.x,E[H++]=t.y,E[H++]=t.z}else{let i=0;if(m===t.GEODESIC)for(_=0;_<b;_++)i+=e.subdivideLineCount(o[_],o[(_+1)%b],f);else if(m===t.RHUMB)for(_=0;_<b;_++)i+=e.subdivideRhumbLineCount(r,o[_],o[(_+1)%b],f);for(E=new Float64Array(3*i),_=0;_<b;_++){let i;m===t.GEODESIC?i=e.subdivideLine(o[_],o[(_+1)%b],f,A):m===t.RHUMB&&(i=e.subdivideRhumbLine(r,o[_],o[(_+1)%b],f,A));let n=i.length;for(let e=0;e<n;++e)E[H++]=i[e]}}let P=2*(b=E.length/3),T=p.createTypedArray(b,P);for(H=0,_=0;_<b-1;_++)T[H++]=_,T[H++]=_+1;return T[H++]=b-1,T[H++]=0,new i({geometry:new h({attributes:new u({position:new c({componentDatatype:d.DOUBLE,componentsPerAttribute:3,values:E})}),indices:T,primitiveType:l.LINES})})}(m,T[S],O,b,P)).geometry.attributes.position.values=a.scaleToGeodeticHeight(j.geometry.attributes.position.values,v,m,!b),H(y._offsetAttribute)){let e=j.geometry.attributes.position.values.length;N=+(y._offsetAttribute!==o.NONE);let t=new Uint8Array(e/3).fill(N);j.geometry.attributes.applyOffset=new c({componentDatatype:d.UNSIGNED_BYTE,componentsPerAttribute:1,values:t})}L.push(j)}let C=r.combineInstances(L)[0],w=f.fromVertices(C.attributes.position.values);return new h({attributes:C.attributes,indices:C.indices,primitiveType:C.primitiveType,boundingSphere:w,offsetAttribute:y._offsetAttribute})};var L=function(e,t){return H(t)&&(e=P.unpack(e,t)),e._ellipsoid=m.clone(e._ellipsoid),P.createGeometry(e)};export{L as default};