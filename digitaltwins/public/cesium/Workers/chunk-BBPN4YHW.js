import{a as e}from"./chunk-IPMQ7HU7.js";import{a as t}from"./chunk-ZFTFDHK4.js";import{a as i}from"./chunk-NNHN6WUY.js";import{a as r}from"./chunk-T7ERZ2CJ.js";import{b as n,c as o,d as s}from"./chunk-GSNDLQ4C.js";import{d as a}from"./chunk-BKSIEBAA.js";import{a as u}from"./chunk-VTVHUB7E.js";import{a as l,d as c}from"./chunk-JMSSU44E.js";import{a as f}from"./chunk-4UYSGV57.js";import{a as h}from"./chunk-VLPNAR64.js";import{a as m}from"./chunk-GE5NEIZC.js";import{e as d}from"./chunk-35CVRQTC.js";var p=new l,_=new l,A=new a,g=new a;function b(e){let t=(e=h(e,h.EMPTY_OBJECT)).center,i=h(e.ellipsoid,c.default),r=e.semiMajorAxis,n=e.semiMinorAxis,o=h(e.granularity,f.RADIANS_PER_DEGREE);if(!d(t))throw new m("center is required.");if(!d(r))throw new m("semiMajorAxis is required.");if(!d(n))throw new m("semiMinorAxis is required.");if(r<n)throw new m("semiMajorAxis must be greater than or equal to the semiMinorAxis.");if(o<=0)throw new m("granularity must be greater than zero.");let s=h(e.height,0),a=h(e.extrudedHeight,s);this._center=l.clone(t),this._semiMajorAxis=r,this._semiMinorAxis=n,this._ellipsoid=c.clone(i),this._rotation=h(e.rotation,0),this._height=Math.max(a,s),this._granularity=o,this._extrudedHeight=Math.min(a,s),this._numberOfVerticalLines=Math.max(h(e.numberOfVerticalLines,16),0),this._offsetAttribute=e.offsetAttribute,this._workerName="createEllipseOutlineGeometry"}b.packedLength=l.packedLength+c.packedLength+8,b.pack=function(e,t,i){if(!d(e))throw new m("value is required");if(!d(t))throw new m("array is required");return i=h(i,0),l.pack(e._center,t,i),i+=l.packedLength,c.pack(e._ellipsoid,t,i),i+=c.packedLength,t[i++]=e._semiMajorAxis,t[i++]=e._semiMinorAxis,t[i++]=e._rotation,t[i++]=e._height,t[i++]=e._granularity,t[i++]=e._extrudedHeight,t[i++]=e._numberOfVerticalLines,t[i]=h(e._offsetAttribute,-1),t};var x=new l,w=new c,M={center:x,ellipsoid:w,semiMajorAxis:void 0,semiMinorAxis:void 0,rotation:void 0,height:void 0,granularity:void 0,extrudedHeight:void 0,numberOfVerticalLines:void 0,offsetAttribute:void 0};b.unpack=function(e,t,i){if(!d(e))throw new m("array is required");t=h(t,0);let r=l.unpack(e,t,x);t+=l.packedLength;let n=c.unpack(e,t,w);t+=c.packedLength;let o=e[t++],s=e[t++],a=e[t++],u=e[t++],f=e[t++],p=e[t++],_=e[t++],A=e[t];return d(i)?(i._center=l.clone(r,i._center),i._ellipsoid=c.clone(n,i._ellipsoid),i._semiMajorAxis=o,i._semiMinorAxis=s,i._rotation=a,i._height=u,i._granularity=f,i._extrudedHeight=p,i._numberOfVerticalLines=_,i._offsetAttribute=-1===A?void 0:A,i):(M.height=u,M.extrudedHeight=p,M.granularity=f,M.rotation=a,M.semiMajorAxis=o,M.semiMinorAxis=s,M.numberOfVerticalLines=_,M.offsetAttribute=-1===A?void 0:A,new b(M))},b.createGeometry=function(c){if(c._semiMajorAxis<=0||c._semiMinorAxis<=0)return;let m=c._height,b=c._extrudedHeight,x=!f.equalsEpsilon(m,b,0,f.EPSILON2);c._center=c._ellipsoid.scaleToGeodeticSurface(c._center,c._center);let w={center:c._center,semiMajorAxis:c._semiMajorAxis,semiMinorAxis:c._semiMinorAxis,ellipsoid:c._ellipsoid,rotation:c._rotation,height:m,granularity:c._granularity,numberOfVerticalLines:c._numberOfVerticalLines},M;if(x)w.extrudedHeight=b,w.offsetAttribute=c._offsetAttribute,M=function(n){let o,c=n.center,m=n.ellipsoid,_=n.semiMajorAxis,b=l.multiplyByScalar(m.geodeticSurfaceNormal(c,p),n.height,p);A.center=l.add(c,b,A.center),A.radius=_,b=l.multiplyByScalar(m.geodeticSurfaceNormal(c,b),n.extrudedHeight,b),g.center=l.add(c,b,g.center),g.radius=_;let x=e.computeEllipsePositions(n,!1,!0).outerPositions,w=new r({position:new s({componentDatatype:u.DOUBLE,componentsPerAttribute:3,values:e.raisePositionsToHeight(x,n,!0)})});x=w.position.values;let M=a.union(A,g),y=x.length/3;if(d(n.offsetAttribute)){let e=new Uint8Array(y);if(n.offsetAttribute===t.TOP)e=e.fill(1,0,y/2);else{let i=+(n.offsetAttribute!==t.NONE);e=e.fill(i)}w.applyOffset=new s({componentDatatype:u.UNSIGNED_BYTE,componentsPerAttribute:1,values:e})}let k=h(n.numberOfVerticalLines,16);k=f.clamp(k,0,y/2);let E=i.createTypedArray(y,2*y+2*k);y/=2;let j=0,L;for(L=0;L<y;++L)E[j++]=L,E[j++]=(L+1)%y,E[j++]=L+y,E[j++]=(L+1)%y+y;if(k>0){let e=Math.min(k,y),t=Math.min((o=Math.round(y/e))*k,y);for(L=0;L<t;L+=o)E[j++]=L,E[j++]=L+y}return{boundingSphere:M,attributes:w,indices:E}}(w);else if(M=function(t){let n=t.center;_=l.multiplyByScalar(t.ellipsoid.geodeticSurfaceNormal(n,_),t.height,_);let o=new a(_=l.add(n,_,_),t.semiMajorAxis),c=e.computeEllipsePositions(t,!1,!0).outerPositions,f=new r({position:new s({componentDatatype:u.DOUBLE,componentsPerAttribute:3,values:e.raisePositionsToHeight(c,t,!1)})}),h=c.length/3,m=i.createTypedArray(h,2*h),d=0;for(let e=0;e<h;++e)m[d++]=e,m[d++]=(e+1)%h;return{boundingSphere:o,attributes:f,indices:m}}(w),d(c._offsetAttribute)){let e=M.attributes.position.values.length,i=+(c._offsetAttribute!==t.NONE),r=new Uint8Array(e/3).fill(i);M.attributes.applyOffset=new s({componentDatatype:u.UNSIGNED_BYTE,componentsPerAttribute:1,values:r})}return new o({attributes:M.attributes,indices:M.indices,primitiveType:n.LINES,boundingSphere:M.boundingSphere,offsetAttribute:c._offsetAttribute})};var y=b;export{y as a};